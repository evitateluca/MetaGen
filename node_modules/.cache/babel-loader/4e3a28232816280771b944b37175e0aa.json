{"ast":null,"code":"'use strict';\n\nmodule.exports = processing;\nprocessing.displayName = 'processing';\nprocessing.aliases = [];\n\nfunction processing(Prism) {\n  Prism.languages.processing = Prism.languages.extend('clike', {\n    keyword: /\\b(?:break|catch|case|class|continue|default|else|extends|final|for|if|implements|import|new|null|private|public|return|static|super|switch|this|try|void|while)\\b/,\n    operator: /<[<=]?|>[>=]?|&&?|\\|\\|?|[%?]|[!=+\\-*\\/]=?/\n  });\n  Prism.languages.insertBefore('processing', 'number', {\n    // Special case: XML is a type\n    constant: /\\b(?!XML\\b)[A-Z][A-Z\\d_]+\\b/,\n    type: {\n      pattern: /\\b(?:boolean|byte|char|color|double|float|int|XML|[A-Z]\\w*)\\b/,\n      alias: 'variable'\n    }\n  }); // Spaces are allowed between function name and parenthesis\n\n  Prism.languages.processing['function'].pattern = /\\w+(?=\\s*\\()/; // Class-names is not styled by default\n\n  Prism.languages.processing['class-name'].alias = 'variable';\n}","map":{"version":3,"names":["module","exports","processing","displayName","aliases","Prism","languages","extend","keyword","operator","insertBefore","constant","type","pattern","alias"],"sources":["/Applications/MAMP/htdocs/metagen/node_modules/refractor/lang/processing.js"],"sourcesContent":["'use strict'\n\nmodule.exports = processing\nprocessing.displayName = 'processing'\nprocessing.aliases = []\nfunction processing(Prism) {\n  Prism.languages.processing = Prism.languages.extend('clike', {\n    keyword: /\\b(?:break|catch|case|class|continue|default|else|extends|final|for|if|implements|import|new|null|private|public|return|static|super|switch|this|try|void|while)\\b/,\n    operator: /<[<=]?|>[>=]?|&&?|\\|\\|?|[%?]|[!=+\\-*\\/]=?/\n  })\n  Prism.languages.insertBefore('processing', 'number', {\n    // Special case: XML is a type\n    constant: /\\b(?!XML\\b)[A-Z][A-Z\\d_]+\\b/,\n    type: {\n      pattern: /\\b(?:boolean|byte|char|color|double|float|int|XML|[A-Z]\\w*)\\b/,\n      alias: 'variable'\n    }\n  }) // Spaces are allowed between function name and parenthesis\n  Prism.languages.processing['function'].pattern = /\\w+(?=\\s*\\()/ // Class-names is not styled by default\n  Prism.languages.processing['class-name'].alias = 'variable'\n}\n"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiBC,UAAjB;AACAA,UAAU,CAACC,WAAX,GAAyB,YAAzB;AACAD,UAAU,CAACE,OAAX,GAAqB,EAArB;;AACA,SAASF,UAAT,CAAoBG,KAApB,EAA2B;EACzBA,KAAK,CAACC,SAAN,CAAgBJ,UAAhB,GAA6BG,KAAK,CAACC,SAAN,CAAgBC,MAAhB,CAAuB,OAAvB,EAAgC;IAC3DC,OAAO,EAAE,oKADkD;IAE3DC,QAAQ,EAAE;EAFiD,CAAhC,CAA7B;EAIAJ,KAAK,CAACC,SAAN,CAAgBI,YAAhB,CAA6B,YAA7B,EAA2C,QAA3C,EAAqD;IACnD;IACAC,QAAQ,EAAE,6BAFyC;IAGnDC,IAAI,EAAE;MACJC,OAAO,EAAE,+DADL;MAEJC,KAAK,EAAE;IAFH;EAH6C,CAArD,EALyB,CAYtB;;EACHT,KAAK,CAACC,SAAN,CAAgBJ,UAAhB,CAA2B,UAA3B,EAAuCW,OAAvC,GAAiD,cAAjD,CAbyB,CAauC;;EAChER,KAAK,CAACC,SAAN,CAAgBJ,UAAhB,CAA2B,YAA3B,EAAyCY,KAAzC,GAAiD,UAAjD;AACD"},"metadata":{},"sourceType":"script"}