{"ast":null,"code":"'use strict';\n\nmodule.exports = stylus;\nstylus.displayName = 'stylus';\nstylus.aliases = [];\n\nfunction stylus(Prism) {\n  ;\n\n  (function (Prism) {\n    var inside = {\n      url: /url\\(([\"']?).*?\\1\\)/i,\n      string: {\n        pattern: /(\"|')(?:(?!\\1)[^\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\\1/,\n        greedy: true\n      },\n      interpolation: null,\n      // See below\n      func: null,\n      // See below\n      important: /\\B!(?:important|optional)\\b/i,\n      keyword: {\n        pattern: /(^|\\s+)(?:(?:if|else|for|return|unless)(?=\\s+|$)|@[\\w-]+)/,\n        lookbehind: true\n      },\n      hexcode: /#[\\da-f]{3,6}/i,\n      number: /\\b\\d+(?:\\.\\d+)?%?/,\n      boolean: /\\b(?:true|false)\\b/,\n      operator: [// We want non-word chars around \"-\" because it is\n      // accepted in property names.\n      /~|[+!\\/%<>?=]=?|[-:]=|\\*[*=]?|\\.+|&&|\\|\\||\\B-\\B|\\b(?:and|in|is(?: a| defined| not|nt)?|not|or)\\b/],\n      punctuation: /[{}()\\[\\];:,]/\n    };\n    inside['interpolation'] = {\n      pattern: /\\{[^\\r\\n}:]+\\}/,\n      alias: 'variable',\n      inside: {\n        delimiter: {\n          pattern: /^{|}$/,\n          alias: 'punctuation'\n        },\n        rest: inside\n      }\n    };\n    inside['func'] = {\n      pattern: /[\\w-]+\\([^)]*\\).*/,\n      inside: {\n        function: /^[^(]+/,\n        rest: inside\n      }\n    };\n    Prism.languages.stylus = {\n      comment: {\n        pattern: /(^|[^\\\\])(\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n        lookbehind: true\n      },\n      'atrule-declaration': {\n        pattern: /(^\\s*)@.+/m,\n        lookbehind: true,\n        inside: {\n          atrule: /^@[\\w-]+/,\n          rest: inside\n        }\n      },\n      'variable-declaration': {\n        pattern: /(^[ \\t]*)[\\w$-]+\\s*.?=[ \\t]*(?:(?:\\{[^}]*\\}|.+)|$)/m,\n        lookbehind: true,\n        inside: {\n          variable: /^\\S+/,\n          rest: inside\n        }\n      },\n      statement: {\n        pattern: /(^[ \\t]*)(?:if|else|for|return|unless)[ \\t]+.+/m,\n        lookbehind: true,\n        inside: {\n          keyword: /^\\S+/,\n          rest: inside\n        }\n      },\n      // A property/value pair cannot end with a comma or a brace\n      // It cannot have indented content unless it ended with a semicolon\n      'property-declaration': {\n        pattern: /((?:^|\\{)([ \\t]*))(?:[\\w-]|\\{[^}\\r\\n]+\\})+(?:\\s*:\\s*|[ \\t]+)[^{\\r\\n]*(?:;|[^{\\r\\n,](?=$)(?!(\\r?\\n|\\r)(?:\\{|\\2[ \\t]+)))/m,\n        lookbehind: true,\n        inside: {\n          property: {\n            pattern: /^[^\\s:]+/,\n            inside: {\n              interpolation: inside.interpolation\n            }\n          },\n          rest: inside\n        }\n      },\n      // A selector can contain parentheses only as part of a pseudo-element\n      // It can span multiple lines.\n      // It must end with a comma or an accolade or have indented content.\n      selector: {\n        pattern: /(^[ \\t]*)(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\))?|\\{[^}\\r\\n]+\\})+)(?:(?:\\r?\\n|\\r)(?:\\1(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\))?|\\{[^}\\r\\n]+\\})+)))*(?:,$|\\{|(?=(?:\\r?\\n|\\r)(?:\\{|\\1[ \\t]+)))/m,\n        lookbehind: true,\n        inside: {\n          interpolation: inside.interpolation,\n          punctuation: /[{},]/\n        }\n      },\n      func: inside.func,\n      string: inside.string,\n      interpolation: inside.interpolation,\n      punctuation: /[{}()\\[\\];:.]/\n    };\n  })(Prism);\n}","map":{"version":3,"names":["module","exports","stylus","displayName","aliases","Prism","inside","url","string","pattern","greedy","interpolation","func","important","keyword","lookbehind","hexcode","number","boolean","operator","punctuation","alias","delimiter","rest","function","languages","comment","atrule","variable","statement","property","selector"],"sources":["/Applications/MAMP/htdocs/metagen/node_modules/refractor/lang/stylus.js"],"sourcesContent":["'use strict'\n\nmodule.exports = stylus\nstylus.displayName = 'stylus'\nstylus.aliases = []\nfunction stylus(Prism) {\n  ;(function(Prism) {\n    var inside = {\n      url: /url\\(([\"']?).*?\\1\\)/i,\n      string: {\n        pattern: /(\"|')(?:(?!\\1)[^\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\\1/,\n        greedy: true\n      },\n      interpolation: null,\n      // See below\n      func: null,\n      // See below\n      important: /\\B!(?:important|optional)\\b/i,\n      keyword: {\n        pattern: /(^|\\s+)(?:(?:if|else|for|return|unless)(?=\\s+|$)|@[\\w-]+)/,\n        lookbehind: true\n      },\n      hexcode: /#[\\da-f]{3,6}/i,\n      number: /\\b\\d+(?:\\.\\d+)?%?/,\n      boolean: /\\b(?:true|false)\\b/,\n      operator: [\n        // We want non-word chars around \"-\" because it is\n        // accepted in property names.\n        /~|[+!\\/%<>?=]=?|[-:]=|\\*[*=]?|\\.+|&&|\\|\\||\\B-\\B|\\b(?:and|in|is(?: a| defined| not|nt)?|not|or)\\b/\n      ],\n      punctuation: /[{}()\\[\\];:,]/\n    }\n    inside['interpolation'] = {\n      pattern: /\\{[^\\r\\n}:]+\\}/,\n      alias: 'variable',\n      inside: {\n        delimiter: {\n          pattern: /^{|}$/,\n          alias: 'punctuation'\n        },\n        rest: inside\n      }\n    }\n    inside['func'] = {\n      pattern: /[\\w-]+\\([^)]*\\).*/,\n      inside: {\n        function: /^[^(]+/,\n        rest: inside\n      }\n    }\n    Prism.languages.stylus = {\n      comment: {\n        pattern: /(^|[^\\\\])(\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n        lookbehind: true\n      },\n      'atrule-declaration': {\n        pattern: /(^\\s*)@.+/m,\n        lookbehind: true,\n        inside: {\n          atrule: /^@[\\w-]+/,\n          rest: inside\n        }\n      },\n      'variable-declaration': {\n        pattern: /(^[ \\t]*)[\\w$-]+\\s*.?=[ \\t]*(?:(?:\\{[^}]*\\}|.+)|$)/m,\n        lookbehind: true,\n        inside: {\n          variable: /^\\S+/,\n          rest: inside\n        }\n      },\n      statement: {\n        pattern: /(^[ \\t]*)(?:if|else|for|return|unless)[ \\t]+.+/m,\n        lookbehind: true,\n        inside: {\n          keyword: /^\\S+/,\n          rest: inside\n        }\n      },\n      // A property/value pair cannot end with a comma or a brace\n      // It cannot have indented content unless it ended with a semicolon\n      'property-declaration': {\n        pattern: /((?:^|\\{)([ \\t]*))(?:[\\w-]|\\{[^}\\r\\n]+\\})+(?:\\s*:\\s*|[ \\t]+)[^{\\r\\n]*(?:;|[^{\\r\\n,](?=$)(?!(\\r?\\n|\\r)(?:\\{|\\2[ \\t]+)))/m,\n        lookbehind: true,\n        inside: {\n          property: {\n            pattern: /^[^\\s:]+/,\n            inside: {\n              interpolation: inside.interpolation\n            }\n          },\n          rest: inside\n        }\n      },\n      // A selector can contain parentheses only as part of a pseudo-element\n      // It can span multiple lines.\n      // It must end with a comma or an accolade or have indented content.\n      selector: {\n        pattern: /(^[ \\t]*)(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\))?|\\{[^}\\r\\n]+\\})+)(?:(?:\\r?\\n|\\r)(?:\\1(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\))?|\\{[^}\\r\\n]+\\})+)))*(?:,$|\\{|(?=(?:\\r?\\n|\\r)(?:\\{|\\1[ \\t]+)))/m,\n        lookbehind: true,\n        inside: {\n          interpolation: inside.interpolation,\n          punctuation: /[{},]/\n        }\n      },\n      func: inside.func,\n      string: inside.string,\n      interpolation: inside.interpolation,\n      punctuation: /[{}()\\[\\];:.]/\n    }\n  })(Prism)\n}\n"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiBC,MAAjB;AACAA,MAAM,CAACC,WAAP,GAAqB,QAArB;AACAD,MAAM,CAACE,OAAP,GAAiB,EAAjB;;AACA,SAASF,MAAT,CAAgBG,KAAhB,EAAuB;EACrB;;EAAC,CAAC,UAASA,KAAT,EAAgB;IAChB,IAAIC,MAAM,GAAG;MACXC,GAAG,EAAE,sBADM;MAEXC,MAAM,EAAE;QACNC,OAAO,EAAE,+CADH;QAENC,MAAM,EAAE;MAFF,CAFG;MAMXC,aAAa,EAAE,IANJ;MAOX;MACAC,IAAI,EAAE,IARK;MASX;MACAC,SAAS,EAAE,8BAVA;MAWXC,OAAO,EAAE;QACPL,OAAO,EAAE,2DADF;QAEPM,UAAU,EAAE;MAFL,CAXE;MAeXC,OAAO,EAAE,gBAfE;MAgBXC,MAAM,EAAE,mBAhBG;MAiBXC,OAAO,EAAE,oBAjBE;MAkBXC,QAAQ,EAAE,CACR;MACA;MACA,kGAHQ,CAlBC;MAuBXC,WAAW,EAAE;IAvBF,CAAb;IAyBAd,MAAM,CAAC,eAAD,CAAN,GAA0B;MACxBG,OAAO,EAAE,gBADe;MAExBY,KAAK,EAAE,UAFiB;MAGxBf,MAAM,EAAE;QACNgB,SAAS,EAAE;UACTb,OAAO,EAAE,OADA;UAETY,KAAK,EAAE;QAFE,CADL;QAKNE,IAAI,EAAEjB;MALA;IAHgB,CAA1B;IAWAA,MAAM,CAAC,MAAD,CAAN,GAAiB;MACfG,OAAO,EAAE,mBADM;MAEfH,MAAM,EAAE;QACNkB,QAAQ,EAAE,QADJ;QAEND,IAAI,EAAEjB;MAFA;IAFO,CAAjB;IAOAD,KAAK,CAACoB,SAAN,CAAgBvB,MAAhB,GAAyB;MACvBwB,OAAO,EAAE;QACPjB,OAAO,EAAE,oCADF;QAEPM,UAAU,EAAE;MAFL,CADc;MAKvB,sBAAsB;QACpBN,OAAO,EAAE,YADW;QAEpBM,UAAU,EAAE,IAFQ;QAGpBT,MAAM,EAAE;UACNqB,MAAM,EAAE,UADF;UAENJ,IAAI,EAAEjB;QAFA;MAHY,CALC;MAavB,wBAAwB;QACtBG,OAAO,EAAE,qDADa;QAEtBM,UAAU,EAAE,IAFU;QAGtBT,MAAM,EAAE;UACNsB,QAAQ,EAAE,MADJ;UAENL,IAAI,EAAEjB;QAFA;MAHc,CAbD;MAqBvBuB,SAAS,EAAE;QACTpB,OAAO,EAAE,iDADA;QAETM,UAAU,EAAE,IAFH;QAGTT,MAAM,EAAE;UACNQ,OAAO,EAAE,MADH;UAENS,IAAI,EAAEjB;QAFA;MAHC,CArBY;MA6BvB;MACA;MACA,wBAAwB;QACtBG,OAAO,EAAE,yHADa;QAEtBM,UAAU,EAAE,IAFU;QAGtBT,MAAM,EAAE;UACNwB,QAAQ,EAAE;YACRrB,OAAO,EAAE,UADD;YAERH,MAAM,EAAE;cACNK,aAAa,EAAEL,MAAM,CAACK;YADhB;UAFA,CADJ;UAONY,IAAI,EAAEjB;QAPA;MAHc,CA/BD;MA4CvB;MACA;MACA;MACAyB,QAAQ,EAAE;QACRtB,OAAO,EAAE,sNADD;QAERM,UAAU,EAAE,IAFJ;QAGRT,MAAM,EAAE;UACNK,aAAa,EAAEL,MAAM,CAACK,aADhB;UAENS,WAAW,EAAE;QAFP;MAHA,CA/Ca;MAuDvBR,IAAI,EAAEN,MAAM,CAACM,IAvDU;MAwDvBJ,MAAM,EAAEF,MAAM,CAACE,MAxDQ;MAyDvBG,aAAa,EAAEL,MAAM,CAACK,aAzDC;MA0DvBS,WAAW,EAAE;IA1DU,CAAzB;EA4DD,CAxGA,EAwGEf,KAxGF;AAyGF"},"metadata":{},"sourceType":"script"}