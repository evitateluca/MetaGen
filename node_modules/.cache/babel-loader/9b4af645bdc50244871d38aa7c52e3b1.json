{"ast":null,"code":"'use strict';\n\nmodule.exports = graphql;\ngraphql.displayName = 'graphql';\ngraphql.aliases = [];\n\nfunction graphql(Prism) {\n  Prism.languages.graphql = {\n    comment: /#.*/,\n    string: {\n      pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n      greedy: true\n    },\n    number: /(?:\\B-|\\b)\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n    boolean: /\\b(?:true|false)\\b/,\n    variable: /\\$[a-z_]\\w*/i,\n    directive: {\n      pattern: /@[a-z_]\\w*/i,\n      alias: 'function'\n    },\n    'attr-name': {\n      pattern: /[a-z_]\\w*(?=\\s*(?:\\((?:[^()\"]|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")*\\))?:)/i,\n      greedy: true\n    },\n    'class-name': {\n      pattern: /(\\b(?:enum|implements|interface|on|scalar|type|union)\\s+)[a-zA-Z_]\\w*/,\n      lookbehind: true\n    },\n    fragment: {\n      pattern: /(\\bfragment\\s+|\\.{3}\\s*(?!on\\b))[a-zA-Z_]\\w*/,\n      lookbehind: true,\n      alias: 'function'\n    },\n    keyword: /\\b(?:enum|fragment|implements|input|interface|mutation|on|query|scalar|schema|type|union)\\b/,\n    operator: /[!=|]|\\.{3}/,\n    punctuation: /[!(){}\\[\\]:=,]/,\n    constant: /\\b(?!ID\\b)[A-Z][A-Z_\\d]*\\b/\n  };\n}","map":{"version":3,"names":["module","exports","graphql","displayName","aliases","Prism","languages","comment","string","pattern","greedy","number","boolean","variable","directive","alias","lookbehind","fragment","keyword","operator","punctuation","constant"],"sources":["/Applications/MAMP/htdocs/metagen/node_modules/refractor/lang/graphql.js"],"sourcesContent":["'use strict'\n\nmodule.exports = graphql\ngraphql.displayName = 'graphql'\ngraphql.aliases = []\nfunction graphql(Prism) {\n  Prism.languages.graphql = {\n    comment: /#.*/,\n    string: {\n      pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n      greedy: true\n    },\n    number: /(?:\\B-|\\b)\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n    boolean: /\\b(?:true|false)\\b/,\n    variable: /\\$[a-z_]\\w*/i,\n    directive: {\n      pattern: /@[a-z_]\\w*/i,\n      alias: 'function'\n    },\n    'attr-name': {\n      pattern: /[a-z_]\\w*(?=\\s*(?:\\((?:[^()\"]|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")*\\))?:)/i,\n      greedy: true\n    },\n    'class-name': {\n      pattern: /(\\b(?:enum|implements|interface|on|scalar|type|union)\\s+)[a-zA-Z_]\\w*/,\n      lookbehind: true\n    },\n    fragment: {\n      pattern: /(\\bfragment\\s+|\\.{3}\\s*(?!on\\b))[a-zA-Z_]\\w*/,\n      lookbehind: true,\n      alias: 'function'\n    },\n    keyword: /\\b(?:enum|fragment|implements|input|interface|mutation|on|query|scalar|schema|type|union)\\b/,\n    operator: /[!=|]|\\.{3}/,\n    punctuation: /[!(){}\\[\\]:=,]/,\n    constant: /\\b(?!ID\\b)[A-Z][A-Z_\\d]*\\b/\n  }\n}\n"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiBC,OAAjB;AACAA,OAAO,CAACC,WAAR,GAAsB,SAAtB;AACAD,OAAO,CAACE,OAAR,GAAkB,EAAlB;;AACA,SAASF,OAAT,CAAiBG,KAAjB,EAAwB;EACtBA,KAAK,CAACC,SAAN,CAAgBJ,OAAhB,GAA0B;IACxBK,OAAO,EAAE,KADe;IAExBC,MAAM,EAAE;MACNC,OAAO,EAAE,uBADH;MAENC,MAAM,EAAE;IAFF,CAFgB;IAMxBC,MAAM,EAAE,0CANgB;IAOxBC,OAAO,EAAE,oBAPe;IAQxBC,QAAQ,EAAE,cARc;IASxBC,SAAS,EAAE;MACTL,OAAO,EAAE,aADA;MAETM,KAAK,EAAE;IAFE,CATa;IAaxB,aAAa;MACXN,OAAO,EAAE,8DADE;MAEXC,MAAM,EAAE;IAFG,CAbW;IAiBxB,cAAc;MACZD,OAAO,EAAE,uEADG;MAEZO,UAAU,EAAE;IAFA,CAjBU;IAqBxBC,QAAQ,EAAE;MACRR,OAAO,EAAE,8CADD;MAERO,UAAU,EAAE,IAFJ;MAGRD,KAAK,EAAE;IAHC,CArBc;IA0BxBG,OAAO,EAAE,6FA1Be;IA2BxBC,QAAQ,EAAE,aA3Bc;IA4BxBC,WAAW,EAAE,gBA5BW;IA6BxBC,QAAQ,EAAE;EA7Bc,CAA1B;AA+BD"},"metadata":{},"sourceType":"script"}