{"ast":null,"code":"module.exports = function (hljs) {\n  var XML_IDENT_RE = '[A-Za-z0-9\\\\._:-]+';\n  var TAG_INTERNALS = {\n    endsWithParent: true,\n    illegal: /</,\n    relevance: 0,\n    contains: [{\n      className: 'attr',\n      begin: XML_IDENT_RE,\n      relevance: 0\n    }, {\n      begin: /=\\s*/,\n      relevance: 0,\n      contains: [{\n        className: 'string',\n        endsParent: true,\n        variants: [{\n          begin: /\"/,\n          end: /\"/\n        }, {\n          begin: /'/,\n          end: /'/\n        }, {\n          begin: /[^\\s\"'=<>`]+/\n        }]\n      }]\n    }]\n  };\n  return {\n    aliases: ['html', 'xhtml', 'rss', 'atom', 'xjb', 'xsd', 'xsl', 'plist', 'wsf'],\n    case_insensitive: true,\n    contains: [{\n      className: 'meta',\n      begin: '<!DOCTYPE',\n      end: '>',\n      relevance: 10,\n      contains: [{\n        begin: '\\\\[',\n        end: '\\\\]'\n      }]\n    }, hljs.COMMENT('<!--', '-->', {\n      relevance: 10\n    }), {\n      begin: '<\\\\!\\\\[CDATA\\\\[',\n      end: '\\\\]\\\\]>',\n      relevance: 10\n    }, {\n      className: 'meta',\n      begin: /<\\?xml/,\n      end: /\\?>/,\n      relevance: 10\n    }, {\n      begin: /<\\?(php)?/,\n      end: /\\?>/,\n      subLanguage: 'php',\n      contains: [// We don't want the php closing tag ?> to close the PHP block when\n      // inside any of the following blocks:\n      {\n        begin: '/\\\\*',\n        end: '\\\\*/',\n        skip: true\n      }, {\n        begin: 'b\"',\n        end: '\"',\n        skip: true\n      }, {\n        begin: 'b\\'',\n        end: '\\'',\n        skip: true\n      }, hljs.inherit(hljs.APOS_STRING_MODE, {\n        illegal: null,\n        className: null,\n        contains: null,\n        skip: true\n      }), hljs.inherit(hljs.QUOTE_STRING_MODE, {\n        illegal: null,\n        className: null,\n        contains: null,\n        skip: true\n      })]\n    }, {\n      className: 'tag',\n\n      /*\n      The lookahead pattern (?=...) ensures that 'begin' only matches\n      '<style' as a single word, followed by a whitespace or an\n      ending braket. The '$' is needed for the lexeme to be recognized\n      by hljs.subMode() that tests lexemes outside the stream.\n      */\n      begin: '<style(?=\\\\s|>|$)',\n      end: '>',\n      keywords: {\n        name: 'style'\n      },\n      contains: [TAG_INTERNALS],\n      starts: {\n        end: '</style>',\n        returnEnd: true,\n        subLanguage: ['css', 'xml']\n      }\n    }, {\n      className: 'tag',\n      // See the comment in the <style tag about the lookahead pattern\n      begin: '<script(?=\\\\s|>|$)',\n      end: '>',\n      keywords: {\n        name: 'script'\n      },\n      contains: [TAG_INTERNALS],\n      starts: {\n        end: '\\<\\/script\\>',\n        returnEnd: true,\n        subLanguage: ['actionscript', 'javascript', 'handlebars', 'xml', 'vbscript']\n      }\n    }, {\n      className: 'tag',\n      begin: '</?',\n      end: '/?>',\n      contains: [{\n        className: 'name',\n        begin: /[^\\/><\\s]+/,\n        relevance: 0\n      }, TAG_INTERNALS]\n    }]\n  };\n};","map":{"version":3,"names":["module","exports","hljs","XML_IDENT_RE","TAG_INTERNALS","endsWithParent","illegal","relevance","contains","className","begin","endsParent","variants","end","aliases","case_insensitive","COMMENT","subLanguage","skip","inherit","APOS_STRING_MODE","QUOTE_STRING_MODE","keywords","name","starts","returnEnd"],"sources":["/Applications/MAMP/htdocs/metagen/node_modules/react-syntax-highlighter/node_modules/highlight.js/lib/languages/xml.js"],"sourcesContent":["module.exports = function(hljs) {\n  var XML_IDENT_RE = '[A-Za-z0-9\\\\._:-]+';\n  var TAG_INTERNALS = {\n    endsWithParent: true,\n    illegal: /</,\n    relevance: 0,\n    contains: [\n      {\n        className: 'attr',\n        begin: XML_IDENT_RE,\n        relevance: 0\n      },\n      {\n        begin: /=\\s*/,\n        relevance: 0,\n        contains: [\n          {\n            className: 'string',\n            endsParent: true,\n            variants: [\n              {begin: /\"/, end: /\"/},\n              {begin: /'/, end: /'/},\n              {begin: /[^\\s\"'=<>`]+/}\n            ]\n          }\n        ]\n      }\n    ]\n  };\n  return {\n    aliases: ['html', 'xhtml', 'rss', 'atom', 'xjb', 'xsd', 'xsl', 'plist', 'wsf'],\n    case_insensitive: true,\n    contains: [\n      {\n        className: 'meta',\n        begin: '<!DOCTYPE', end: '>',\n        relevance: 10,\n        contains: [{begin: '\\\\[', end: '\\\\]'}]\n      },\n      hljs.COMMENT(\n        '<!--',\n        '-->',\n        {\n          relevance: 10\n        }\n      ),\n      {\n        begin: '<\\\\!\\\\[CDATA\\\\[', end: '\\\\]\\\\]>',\n        relevance: 10\n      },\n      {\n        className: 'meta',\n        begin: /<\\?xml/, end: /\\?>/, relevance: 10\n      },\n      {\n        begin: /<\\?(php)?/, end: /\\?>/,\n        subLanguage: 'php',\n        contains: [\n          // We don't want the php closing tag ?> to close the PHP block when\n          // inside any of the following blocks:\n          {begin: '/\\\\*', end: '\\\\*/', skip: true},\n          {begin: 'b\"', end: '\"', skip: true},\n          {begin: 'b\\'', end: '\\'', skip: true},\n          hljs.inherit(hljs.APOS_STRING_MODE, {illegal: null, className: null, contains: null, skip: true}),\n          hljs.inherit(hljs.QUOTE_STRING_MODE, {illegal: null, className: null, contains: null, skip: true})\n        ]\n      },\n      {\n        className: 'tag',\n        /*\n        The lookahead pattern (?=...) ensures that 'begin' only matches\n        '<style' as a single word, followed by a whitespace or an\n        ending braket. The '$' is needed for the lexeme to be recognized\n        by hljs.subMode() that tests lexemes outside the stream.\n        */\n        begin: '<style(?=\\\\s|>|$)', end: '>',\n        keywords: {name: 'style'},\n        contains: [TAG_INTERNALS],\n        starts: {\n          end: '</style>', returnEnd: true,\n          subLanguage: ['css', 'xml']\n        }\n      },\n      {\n        className: 'tag',\n        // See the comment in the <style tag about the lookahead pattern\n        begin: '<script(?=\\\\s|>|$)', end: '>',\n        keywords: {name: 'script'},\n        contains: [TAG_INTERNALS],\n        starts: {\n          end: '\\<\\/script\\>', returnEnd: true,\n          subLanguage: ['actionscript', 'javascript', 'handlebars', 'xml', 'vbscript']\n        }\n      },\n      {\n        className: 'tag',\n        begin: '</?', end: '/?>',\n        contains: [\n          {\n            className: 'name', begin: /[^\\/><\\s]+/, relevance: 0\n          },\n          TAG_INTERNALS\n        ]\n      }\n    ]\n  };\n};"],"mappings":"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"},"metadata":{},"sourceType":"script"}