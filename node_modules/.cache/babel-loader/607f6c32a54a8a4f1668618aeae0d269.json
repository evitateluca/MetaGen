{"ast":null,"code":"'use strict';\n\nmodule.exports = xeora;\nxeora.displayName = 'xeora';\nxeora.aliases = ['xeoracube'];\n\nfunction xeora(Prism) {\n  ;\n\n  (function (Prism) {\n    Prism.languages.xeora = Prism.languages.extend('markup', {\n      constant: {\n        pattern: /\\$(?:DomainContents|PageRenderDuration)\\$/,\n        inside: {\n          punctuation: {\n            pattern: /\\$/\n          }\n        }\n      },\n      variable: {\n        pattern: /\\$@?(?:#+|[-+*~=^])?[\\w.]+\\$/,\n        inside: {\n          punctuation: {\n            pattern: /[$.]/\n          },\n          operator: {\n            pattern: /#+|[-+*~=^@]/\n          }\n        }\n      },\n      'function-inline': {\n        pattern: /\\$F:[-\\w.]+\\?[-\\w.]+(?:,(?:\\|?(?:[-#.^+*~]*(?:[\\w+][^$]*)|=(?:[\\S+][^$]*)|@[-#]*(?:\\w+.)[\\w+.]+)?)*)?\\$/,\n        inside: {\n          variable: {\n            pattern: /(?:[,|])@?(?:#+|[-+*~=^])?[\\w.]+/,\n            inside: {\n              punctuation: {\n                pattern: /[,.|]/\n              },\n              operator: {\n                pattern: /#+|[-+*~=^@]/\n              }\n            }\n          },\n          punctuation: {\n            pattern: /\\$\\w:|[$:?.,|]/\n          }\n        },\n        alias: 'function'\n      },\n      'function-block': {\n        pattern: /\\$XF:{[-\\w.]+\\?[-\\w.]+(?:,(?:\\|?(?:[-#.^+*~]*(?:[\\w+][^$]*)|=(?:[\\S+][^$]*)|@[-#]*(?:\\w+.)[\\w+.]+)?)*)?}:XF\\$/,\n        inside: {\n          punctuation: {\n            pattern: /[$:{}?.,|]/\n          }\n        },\n        alias: 'function'\n      },\n      'directive-inline': {\n        pattern: /\\$\\w(?:#\\d+\\+?)?(?:\\[[-\\w.]+])?:[-\\/\\w.]+\\$/,\n        inside: {\n          punctuation: {\n            pattern: /\\$(?:\\w:|C(?:\\[|#\\d))?|[:{[\\]]/,\n            inside: {\n              tag: {\n                pattern: /#\\d/\n              }\n            }\n          }\n        },\n        alias: 'function'\n      },\n      'directive-block-open': {\n        pattern: /\\$\\w+:{|\\$\\w(?:#\\d+\\+?)?(?:\\[[-\\w.]+])?:[-\\w.]+:{(![A-Z]+)?/,\n        inside: {\n          punctuation: {\n            pattern: /\\$(?:\\w:|C(?:\\[|#\\d))?|[:{[\\]]/,\n            inside: {\n              tag: {\n                pattern: /#\\d/\n              }\n            }\n          },\n          attribute: {\n            pattern: /![A-Z]+$/,\n            inside: {\n              punctuation: {\n                pattern: /!/\n              }\n            },\n            alias: 'keyword'\n          }\n        },\n        alias: 'function'\n      },\n      'directive-block-separator': {\n        pattern: /}:[-\\w.]+:{/,\n        inside: {\n          punctuation: {\n            pattern: /[:{}]/\n          }\n        },\n        alias: 'function'\n      },\n      'directive-block-close': {\n        pattern: /}:[-\\w.]+\\$/,\n        inside: {\n          punctuation: {\n            pattern: /[:{}$]/\n          }\n        },\n        alias: 'function'\n      }\n    });\n    Prism.languages.insertBefore('inside', 'punctuation', {\n      variable: Prism.languages.xeora['function-inline'].inside['variable']\n    }, Prism.languages.xeora['function-block']);\n    Prism.languages.xeoracube = Prism.languages.xeora;\n  })(Prism);\n}","map":{"version":3,"names":["module","exports","xeora","displayName","aliases","Prism","languages","extend","constant","pattern","inside","punctuation","variable","operator","alias","tag","attribute","insertBefore","xeoracube"],"sources":["/Applications/MAMP/htdocs/metagen/node_modules/refractor/lang/xeora.js"],"sourcesContent":["'use strict'\n\nmodule.exports = xeora\nxeora.displayName = 'xeora'\nxeora.aliases = ['xeoracube']\nfunction xeora(Prism) {\n  ;(function(Prism) {\n    Prism.languages.xeora = Prism.languages.extend('markup', {\n      constant: {\n        pattern: /\\$(?:DomainContents|PageRenderDuration)\\$/,\n        inside: {\n          punctuation: {\n            pattern: /\\$/\n          }\n        }\n      },\n      variable: {\n        pattern: /\\$@?(?:#+|[-+*~=^])?[\\w.]+\\$/,\n        inside: {\n          punctuation: {\n            pattern: /[$.]/\n          },\n          operator: {\n            pattern: /#+|[-+*~=^@]/\n          }\n        }\n      },\n      'function-inline': {\n        pattern: /\\$F:[-\\w.]+\\?[-\\w.]+(?:,(?:\\|?(?:[-#.^+*~]*(?:[\\w+][^$]*)|=(?:[\\S+][^$]*)|@[-#]*(?:\\w+.)[\\w+.]+)?)*)?\\$/,\n        inside: {\n          variable: {\n            pattern: /(?:[,|])@?(?:#+|[-+*~=^])?[\\w.]+/,\n            inside: {\n              punctuation: {\n                pattern: /[,.|]/\n              },\n              operator: {\n                pattern: /#+|[-+*~=^@]/\n              }\n            }\n          },\n          punctuation: {\n            pattern: /\\$\\w:|[$:?.,|]/\n          }\n        },\n        alias: 'function'\n      },\n      'function-block': {\n        pattern: /\\$XF:{[-\\w.]+\\?[-\\w.]+(?:,(?:\\|?(?:[-#.^+*~]*(?:[\\w+][^$]*)|=(?:[\\S+][^$]*)|@[-#]*(?:\\w+.)[\\w+.]+)?)*)?}:XF\\$/,\n        inside: {\n          punctuation: {\n            pattern: /[$:{}?.,|]/\n          }\n        },\n        alias: 'function'\n      },\n      'directive-inline': {\n        pattern: /\\$\\w(?:#\\d+\\+?)?(?:\\[[-\\w.]+])?:[-\\/\\w.]+\\$/,\n        inside: {\n          punctuation: {\n            pattern: /\\$(?:\\w:|C(?:\\[|#\\d))?|[:{[\\]]/,\n            inside: {\n              tag: {\n                pattern: /#\\d/\n              }\n            }\n          }\n        },\n        alias: 'function'\n      },\n      'directive-block-open': {\n        pattern: /\\$\\w+:{|\\$\\w(?:#\\d+\\+?)?(?:\\[[-\\w.]+])?:[-\\w.]+:{(![A-Z]+)?/,\n        inside: {\n          punctuation: {\n            pattern: /\\$(?:\\w:|C(?:\\[|#\\d))?|[:{[\\]]/,\n            inside: {\n              tag: {\n                pattern: /#\\d/\n              }\n            }\n          },\n          attribute: {\n            pattern: /![A-Z]+$/,\n            inside: {\n              punctuation: {\n                pattern: /!/\n              }\n            },\n            alias: 'keyword'\n          }\n        },\n        alias: 'function'\n      },\n      'directive-block-separator': {\n        pattern: /}:[-\\w.]+:{/,\n        inside: {\n          punctuation: {\n            pattern: /[:{}]/\n          }\n        },\n        alias: 'function'\n      },\n      'directive-block-close': {\n        pattern: /}:[-\\w.]+\\$/,\n        inside: {\n          punctuation: {\n            pattern: /[:{}$]/\n          }\n        },\n        alias: 'function'\n      }\n    })\n    Prism.languages.insertBefore(\n      'inside',\n      'punctuation',\n      {\n        variable: Prism.languages.xeora['function-inline'].inside['variable']\n      },\n      Prism.languages.xeora['function-block']\n    )\n    Prism.languages.xeoracube = Prism.languages.xeora\n  })(Prism)\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}