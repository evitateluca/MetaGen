{"ast":null,"code":"module.exports = function (hljs) {\n  return {\n    aliases: ['adoc'],\n    contains: [// block comment\n    hljs.COMMENT('^/{4,}\\\\n', '\\\\n/{4,}$', // can also be done as...\n    //'^/{4,}$',\n    //'^/{4,}$',\n    {\n      relevance: 10\n    }), // line comment\n    hljs.COMMENT('^//', '$', {\n      relevance: 0\n    }), // title\n    {\n      className: 'title',\n      begin: '^\\\\.\\\\w.*$'\n    }, // example, admonition & sidebar blocks\n    {\n      begin: '^[=\\\\*]{4,}\\\\n',\n      end: '\\\\n^[=\\\\*]{4,}$',\n      relevance: 10\n    }, // headings\n    {\n      className: 'section',\n      relevance: 10,\n      variants: [{\n        begin: '^(={1,5}) .+?( \\\\1)?$'\n      }, {\n        begin: '^[^\\\\[\\\\]\\\\n]+?\\\\n[=\\\\-~\\\\^\\\\+]{2,}$'\n      }]\n    }, // document attributes\n    {\n      className: 'meta',\n      begin: '^:.+?:',\n      end: '\\\\s',\n      excludeEnd: true,\n      relevance: 10\n    }, // block attributes\n    {\n      className: 'meta',\n      begin: '^\\\\[.+?\\\\]$',\n      relevance: 0\n    }, // quoteblocks\n    {\n      className: 'quote',\n      begin: '^_{4,}\\\\n',\n      end: '\\\\n_{4,}$',\n      relevance: 10\n    }, // listing and literal blocks\n    {\n      className: 'code',\n      begin: '^[\\\\-\\\\.]{4,}\\\\n',\n      end: '\\\\n[\\\\-\\\\.]{4,}$',\n      relevance: 10\n    }, // passthrough blocks\n    {\n      begin: '^\\\\+{4,}\\\\n',\n      end: '\\\\n\\\\+{4,}$',\n      contains: [{\n        begin: '<',\n        end: '>',\n        subLanguage: 'xml',\n        relevance: 0\n      }],\n      relevance: 10\n    }, // lists (can only capture indicators)\n    {\n      className: 'bullet',\n      begin: '^(\\\\*+|\\\\-+|\\\\.+|[^\\\\n]+?::)\\\\s+'\n    }, // admonition\n    {\n      className: 'symbol',\n      begin: '^(NOTE|TIP|IMPORTANT|WARNING|CAUTION):\\\\s+',\n      relevance: 10\n    }, // inline strong\n    {\n      className: 'strong',\n      // must not follow a word character or be followed by an asterisk or space\n      begin: '\\\\B\\\\*(?![\\\\*\\\\s])',\n      end: '(\\\\n{2}|\\\\*)',\n      // allow escaped asterisk followed by word char\n      contains: [{\n        begin: '\\\\\\\\*\\\\w',\n        relevance: 0\n      }]\n    }, // inline emphasis\n    {\n      className: 'emphasis',\n      // must not follow a word character or be followed by a single quote or space\n      begin: '\\\\B\\'(?![\\'\\\\s])',\n      end: '(\\\\n{2}|\\')',\n      // allow escaped single quote followed by word char\n      contains: [{\n        begin: '\\\\\\\\\\'\\\\w',\n        relevance: 0\n      }],\n      relevance: 0\n    }, // inline emphasis (alt)\n    {\n      className: 'emphasis',\n      // must not follow a word character or be followed by an underline or space\n      begin: '_(?![_\\\\s])',\n      end: '(\\\\n{2}|_)',\n      relevance: 0\n    }, // inline smart quotes\n    {\n      className: 'string',\n      variants: [{\n        begin: \"``.+?''\"\n      }, {\n        begin: \"`.+?'\"\n      }]\n    }, // inline code snippets (TODO should get same treatment as strong and emphasis)\n    {\n      className: 'code',\n      begin: '(`.+?`|\\\\+.+?\\\\+)',\n      relevance: 0\n    }, // indented literal block\n    {\n      className: 'code',\n      begin: '^[ \\\\t]',\n      end: '$',\n      relevance: 0\n    }, // horizontal rules\n    {\n      begin: '^\\'{3,}[ \\\\t]*$',\n      relevance: 10\n    }, // images and links\n    {\n      begin: '(link:)?(http|https|ftp|file|irc|image:?):\\\\S+\\\\[.*?\\\\]',\n      returnBegin: true,\n      contains: [{\n        begin: '(link|image:?):',\n        relevance: 0\n      }, {\n        className: 'link',\n        begin: '\\\\w',\n        end: '[^\\\\[]+',\n        relevance: 0\n      }, {\n        className: 'string',\n        begin: '\\\\[',\n        end: '\\\\]',\n        excludeBegin: true,\n        excludeEnd: true,\n        relevance: 0\n      }],\n      relevance: 10\n    }]\n  };\n};","map":{"version":3,"names":["module","exports","hljs","aliases","contains","COMMENT","relevance","className","begin","end","variants","excludeEnd","subLanguage","returnBegin","excludeBegin"],"sources":["/Applications/MAMP/htdocs/metagen/node_modules/lowlight/node_modules/highlight.js/lib/languages/asciidoc.js"],"sourcesContent":["module.exports = function(hljs) {\n  return {\n    aliases: ['adoc'],\n    contains: [\n      // block comment\n      hljs.COMMENT(\n        '^/{4,}\\\\n',\n        '\\\\n/{4,}$',\n        // can also be done as...\n        //'^/{4,}$',\n        //'^/{4,}$',\n        {\n          relevance: 10\n        }\n      ),\n      // line comment\n      hljs.COMMENT(\n        '^//',\n        '$',\n        {\n          relevance: 0\n        }\n      ),\n      // title\n      {\n        className: 'title',\n        begin: '^\\\\.\\\\w.*$'\n      },\n      // example, admonition & sidebar blocks\n      {\n        begin: '^[=\\\\*]{4,}\\\\n',\n        end: '\\\\n^[=\\\\*]{4,}$',\n        relevance: 10\n      },\n      // headings\n      {\n        className: 'section',\n        relevance: 10,\n        variants: [\n          {begin: '^(={1,5}) .+?( \\\\1)?$'},\n          {begin: '^[^\\\\[\\\\]\\\\n]+?\\\\n[=\\\\-~\\\\^\\\\+]{2,}$'},\n        ]\n      },\n      // document attributes\n      {\n        className: 'meta',\n        begin: '^:.+?:',\n        end: '\\\\s',\n        excludeEnd: true,\n        relevance: 10\n      },\n      // block attributes\n      {\n        className: 'meta',\n        begin: '^\\\\[.+?\\\\]$',\n        relevance: 0\n      },\n      // quoteblocks\n      {\n        className: 'quote',\n        begin: '^_{4,}\\\\n',\n        end: '\\\\n_{4,}$',\n        relevance: 10\n      },\n      // listing and literal blocks\n      {\n        className: 'code',\n        begin: '^[\\\\-\\\\.]{4,}\\\\n',\n        end: '\\\\n[\\\\-\\\\.]{4,}$',\n        relevance: 10\n      },\n      // passthrough blocks\n      {\n        begin: '^\\\\+{4,}\\\\n',\n        end: '\\\\n\\\\+{4,}$',\n        contains: [\n          {\n            begin: '<', end: '>',\n            subLanguage: 'xml',\n            relevance: 0\n          }\n        ],\n        relevance: 10\n      },\n      // lists (can only capture indicators)\n      {\n        className: 'bullet',\n        begin: '^(\\\\*+|\\\\-+|\\\\.+|[^\\\\n]+?::)\\\\s+'\n      },\n      // admonition\n      {\n        className: 'symbol',\n        begin: '^(NOTE|TIP|IMPORTANT|WARNING|CAUTION):\\\\s+',\n        relevance: 10\n      },\n      // inline strong\n      {\n        className: 'strong',\n        // must not follow a word character or be followed by an asterisk or space\n        begin: '\\\\B\\\\*(?![\\\\*\\\\s])',\n        end: '(\\\\n{2}|\\\\*)',\n        // allow escaped asterisk followed by word char\n        contains: [\n          {\n            begin: '\\\\\\\\*\\\\w',\n            relevance: 0\n          }\n        ]\n      },\n      // inline emphasis\n      {\n        className: 'emphasis',\n        // must not follow a word character or be followed by a single quote or space\n        begin: '\\\\B\\'(?![\\'\\\\s])',\n        end: '(\\\\n{2}|\\')',\n        // allow escaped single quote followed by word char\n        contains: [\n          {\n            begin: '\\\\\\\\\\'\\\\w',\n            relevance: 0\n          }\n        ],\n        relevance: 0\n      },\n      // inline emphasis (alt)\n      {\n        className: 'emphasis',\n        // must not follow a word character or be followed by an underline or space\n        begin: '_(?![_\\\\s])',\n        end: '(\\\\n{2}|_)',\n        relevance: 0\n      },\n      // inline smart quotes\n      {\n        className: 'string',\n        variants: [\n          {begin: \"``.+?''\"},\n          {begin: \"`.+?'\"}\n        ]\n      },\n      // inline code snippets (TODO should get same treatment as strong and emphasis)\n      {\n        className: 'code',\n        begin: '(`.+?`|\\\\+.+?\\\\+)',\n        relevance: 0\n      },\n      // indented literal block\n      {\n        className: 'code',\n        begin: '^[ \\\\t]',\n        end: '$',\n        relevance: 0\n      },\n      // horizontal rules\n      {\n        begin: '^\\'{3,}[ \\\\t]*$',\n        relevance: 10\n      },\n      // images and links\n      {\n        begin: '(link:)?(http|https|ftp|file|irc|image:?):\\\\S+\\\\[.*?\\\\]',\n        returnBegin: true,\n        contains: [\n          {\n            begin: '(link|image:?):',\n            relevance: 0\n          },\n          {\n            className: 'link',\n            begin: '\\\\w',\n            end: '[^\\\\[]+',\n            relevance: 0\n          },\n          {\n            className: 'string',\n            begin: '\\\\[',\n            end: '\\\\]',\n            excludeBegin: true,\n            excludeEnd: true,\n            relevance: 0\n          }\n        ],\n        relevance: 10\n      }\n    ]\n  };\n};"],"mappings":"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"},"metadata":{},"sourceType":"script"}