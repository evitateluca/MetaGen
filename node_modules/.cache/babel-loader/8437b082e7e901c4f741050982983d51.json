{"ast":null,"code":"module.exports = function (hljs) {\n  var IDENT_RE = '[a-zA-Z_$][a-zA-Z0-9_$]*';\n  var IDENT_FUNC_RETURN_TYPE_RE = '([*]|[a-zA-Z_$][a-zA-Z0-9_$]*)';\n  var AS3_REST_ARG_MODE = {\n    className: 'rest_arg',\n    begin: '[.]{3}',\n    end: IDENT_RE,\n    relevance: 10\n  };\n  return {\n    aliases: ['as'],\n    keywords: {\n      keyword: 'as break case catch class const continue default delete do dynamic each ' + 'else extends final finally for function get if implements import in include ' + 'instanceof interface internal is namespace native new override package private ' + 'protected public return set static super switch this throw try typeof use var void ' + 'while with',\n      literal: 'true false null undefined'\n    },\n    contains: [hljs.APOS_STRING_MODE, hljs.QUOTE_STRING_MODE, hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE, hljs.C_NUMBER_MODE, {\n      className: 'class',\n      beginKeywords: 'package',\n      end: '{',\n      contains: [hljs.TITLE_MODE]\n    }, {\n      className: 'class',\n      beginKeywords: 'class interface',\n      end: '{',\n      excludeEnd: true,\n      contains: [{\n        beginKeywords: 'extends implements'\n      }, hljs.TITLE_MODE]\n    }, {\n      className: 'meta',\n      beginKeywords: 'import include',\n      end: ';',\n      keywords: {\n        'meta-keyword': 'import include'\n      }\n    }, {\n      className: 'function',\n      beginKeywords: 'function',\n      end: '[{;]',\n      excludeEnd: true,\n      illegal: '\\\\S',\n      contains: [hljs.TITLE_MODE, {\n        className: 'params',\n        begin: '\\\\(',\n        end: '\\\\)',\n        contains: [hljs.APOS_STRING_MODE, hljs.QUOTE_STRING_MODE, hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE, AS3_REST_ARG_MODE]\n      }, {\n        begin: ':\\\\s*' + IDENT_FUNC_RETURN_TYPE_RE\n      }]\n    }, hljs.METHOD_GUARD],\n    illegal: /#/\n  };\n};","map":{"version":3,"names":["module","exports","hljs","IDENT_RE","IDENT_FUNC_RETURN_TYPE_RE","AS3_REST_ARG_MODE","className","begin","end","relevance","aliases","keywords","keyword","literal","contains","APOS_STRING_MODE","QUOTE_STRING_MODE","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","C_NUMBER_MODE","beginKeywords","TITLE_MODE","excludeEnd","illegal","METHOD_GUARD"],"sources":["/Applications/MAMP/htdocs/metagen/node_modules/lowlight/node_modules/highlight.js/lib/languages/actionscript.js"],"sourcesContent":["module.exports = function(hljs) {\n  var IDENT_RE = '[a-zA-Z_$][a-zA-Z0-9_$]*';\n  var IDENT_FUNC_RETURN_TYPE_RE = '([*]|[a-zA-Z_$][a-zA-Z0-9_$]*)';\n\n  var AS3_REST_ARG_MODE = {\n    className: 'rest_arg',\n    begin: '[.]{3}', end: IDENT_RE,\n    relevance: 10\n  };\n\n  return {\n    aliases: ['as'],\n    keywords: {\n      keyword: 'as break case catch class const continue default delete do dynamic each ' +\n        'else extends final finally for function get if implements import in include ' +\n        'instanceof interface internal is namespace native new override package private ' +\n        'protected public return set static super switch this throw try typeof use var void ' +\n        'while with',\n      literal: 'true false null undefined'\n    },\n    contains: [\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.C_NUMBER_MODE,\n      {\n        className: 'class',\n        beginKeywords: 'package', end: '{',\n        contains: [hljs.TITLE_MODE]\n      },\n      {\n        className: 'class',\n        beginKeywords: 'class interface', end: '{', excludeEnd: true,\n        contains: [\n          {\n            beginKeywords: 'extends implements'\n          },\n          hljs.TITLE_MODE\n        ]\n      },\n      {\n        className: 'meta',\n        beginKeywords: 'import include', end: ';',\n        keywords: {'meta-keyword': 'import include'}\n      },\n      {\n        className: 'function',\n        beginKeywords: 'function', end: '[{;]', excludeEnd: true,\n        illegal: '\\\\S',\n        contains: [\n          hljs.TITLE_MODE,\n          {\n            className: 'params',\n            begin: '\\\\(', end: '\\\\)',\n            contains: [\n              hljs.APOS_STRING_MODE,\n              hljs.QUOTE_STRING_MODE,\n              hljs.C_LINE_COMMENT_MODE,\n              hljs.C_BLOCK_COMMENT_MODE,\n              AS3_REST_ARG_MODE\n            ]\n          },\n          {\n            begin: ':\\\\s*' + IDENT_FUNC_RETURN_TYPE_RE\n          }\n        ]\n      },\n      hljs.METHOD_GUARD\n    ],\n    illegal: /#/\n  };\n};"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiB,UAASC,IAAT,EAAe;EAC9B,IAAIC,QAAQ,GAAG,0BAAf;EACA,IAAIC,yBAAyB,GAAG,gCAAhC;EAEA,IAAIC,iBAAiB,GAAG;IACtBC,SAAS,EAAE,UADW;IAEtBC,KAAK,EAAE,QAFe;IAELC,GAAG,EAAEL,QAFA;IAGtBM,SAAS,EAAE;EAHW,CAAxB;EAMA,OAAO;IACLC,OAAO,EAAE,CAAC,IAAD,CADJ;IAELC,QAAQ,EAAE;MACRC,OAAO,EAAE,6EACP,8EADO,GAEP,iFAFO,GAGP,qFAHO,GAIP,YALM;MAMRC,OAAO,EAAE;IAND,CAFL;IAULC,QAAQ,EAAE,CACRZ,IAAI,CAACa,gBADG,EAERb,IAAI,CAACc,iBAFG,EAGRd,IAAI,CAACe,mBAHG,EAIRf,IAAI,CAACgB,oBAJG,EAKRhB,IAAI,CAACiB,aALG,EAMR;MACEb,SAAS,EAAE,OADb;MAEEc,aAAa,EAAE,SAFjB;MAE4BZ,GAAG,EAAE,GAFjC;MAGEM,QAAQ,EAAE,CAACZ,IAAI,CAACmB,UAAN;IAHZ,CANQ,EAWR;MACEf,SAAS,EAAE,OADb;MAEEc,aAAa,EAAE,iBAFjB;MAEoCZ,GAAG,EAAE,GAFzC;MAE8Cc,UAAU,EAAE,IAF1D;MAGER,QAAQ,EAAE,CACR;QACEM,aAAa,EAAE;MADjB,CADQ,EAIRlB,IAAI,CAACmB,UAJG;IAHZ,CAXQ,EAqBR;MACEf,SAAS,EAAE,MADb;MAEEc,aAAa,EAAE,gBAFjB;MAEmCZ,GAAG,EAAE,GAFxC;MAGEG,QAAQ,EAAE;QAAC,gBAAgB;MAAjB;IAHZ,CArBQ,EA0BR;MACEL,SAAS,EAAE,UADb;MAEEc,aAAa,EAAE,UAFjB;MAE6BZ,GAAG,EAAE,MAFlC;MAE0Cc,UAAU,EAAE,IAFtD;MAGEC,OAAO,EAAE,KAHX;MAIET,QAAQ,EAAE,CACRZ,IAAI,CAACmB,UADG,EAER;QACEf,SAAS,EAAE,QADb;QAEEC,KAAK,EAAE,KAFT;QAEgBC,GAAG,EAAE,KAFrB;QAGEM,QAAQ,EAAE,CACRZ,IAAI,CAACa,gBADG,EAERb,IAAI,CAACc,iBAFG,EAGRd,IAAI,CAACe,mBAHG,EAIRf,IAAI,CAACgB,oBAJG,EAKRb,iBALQ;MAHZ,CAFQ,EAaR;QACEE,KAAK,EAAE,UAAUH;MADnB,CAbQ;IAJZ,CA1BQ,EAgDRF,IAAI,CAACsB,YAhDG,CAVL;IA4DLD,OAAO,EAAE;EA5DJ,CAAP;AA8DD,CAxED"},"metadata":{},"sourceType":"script"}