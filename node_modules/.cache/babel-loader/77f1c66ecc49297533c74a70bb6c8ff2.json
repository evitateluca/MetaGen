{"ast":null,"code":"'use strict';\n\nmodule.exports = scss;\nscss.displayName = 'scss';\nscss.aliases = [];\n\nfunction scss(Prism) {\n  Prism.languages.scss = Prism.languages.extend('css', {\n    comment: {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n      lookbehind: true\n    },\n    atrule: {\n      pattern: /@[\\w-]+(?:\\([^()]+\\)|[^(])*?(?=\\s+[{;])/,\n      inside: {\n        rule: /@[\\w-]+/ // See rest below\n\n      }\n    },\n    // url, compassified\n    url: /(?:[-a-z]+-)?url(?=\\()/i,\n    // CSS selector regex is not appropriate for Sass\n    // since there can be lot more things (var, @ directive, nesting..)\n    // a selector must start at the end of a property or after a brace (end of other rules or nesting)\n    // it can contain some characters that aren't used for defining rules or end of selector, & (parent selector), or interpolated variable\n    // the end of a selector is found when there is no rules in it ( {} or {\\s}) or if there is a property (because an interpolated var\n    // can \"pass\" as a selector- e.g: proper#{$erty})\n    // this one was hard to do, so please be careful if you edit this one :)\n    selector: {\n      // Initial look-ahead is used to prevent matching of blank selectors\n      pattern: /(?=\\S)[^@;{}()]?(?:[^@;{}()]|#\\{\\$[-\\w]+\\})+(?=\\s*\\{(?:\\}|\\s|[^}]+[:{][^}]+))/m,\n      inside: {\n        parent: {\n          pattern: /&/,\n          alias: 'important'\n        },\n        placeholder: /%[-\\w]+/,\n        variable: /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n      }\n    },\n    property: {\n      pattern: /(?:[\\w-]|\\$[-\\w]+|#\\{\\$[-\\w]+\\})+(?=\\s*:)/,\n      inside: {\n        variable: /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n      }\n    }\n  });\n  Prism.languages.insertBefore('scss', 'atrule', {\n    keyword: [/@(?:if|else(?: if)?|for|each|while|import|extend|debug|warn|mixin|include|function|return|content)/i, {\n      pattern: /( +)(?:from|through)(?= )/,\n      lookbehind: true\n    }]\n  });\n  Prism.languages.insertBefore('scss', 'important', {\n    // var and interpolated vars\n    variable: /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n  });\n  Prism.languages.insertBefore('scss', 'function', {\n    placeholder: {\n      pattern: /%[-\\w]+/,\n      alias: 'selector'\n    },\n    statement: {\n      pattern: /\\B!(?:default|optional)\\b/i,\n      alias: 'keyword'\n    },\n    boolean: /\\b(?:true|false)\\b/,\n    null: {\n      pattern: /\\bnull\\b/,\n      alias: 'keyword'\n    },\n    operator: {\n      pattern: /(\\s)(?:[-+*\\/%]|[=!]=|<=?|>=?|and|or|not)(?=\\s)/,\n      lookbehind: true\n    }\n  });\n  Prism.languages.scss['atrule'].inside.rest = Prism.languages.scss;\n}","map":{"version":3,"names":["module","exports","scss","displayName","aliases","Prism","languages","extend","comment","pattern","lookbehind","atrule","inside","rule","url","selector","parent","alias","placeholder","variable","property","insertBefore","keyword","statement","boolean","null","operator","rest"],"sources":["/Applications/MAMP/htdocs/metagen/node_modules/refractor/lang/scss.js"],"sourcesContent":["'use strict'\n\nmodule.exports = scss\nscss.displayName = 'scss'\nscss.aliases = []\nfunction scss(Prism) {\n  Prism.languages.scss = Prism.languages.extend('css', {\n    comment: {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n      lookbehind: true\n    },\n    atrule: {\n      pattern: /@[\\w-]+(?:\\([^()]+\\)|[^(])*?(?=\\s+[{;])/,\n      inside: {\n        rule: /@[\\w-]+/ // See rest below\n      }\n    },\n    // url, compassified\n    url: /(?:[-a-z]+-)?url(?=\\()/i,\n    // CSS selector regex is not appropriate for Sass\n    // since there can be lot more things (var, @ directive, nesting..)\n    // a selector must start at the end of a property or after a brace (end of other rules or nesting)\n    // it can contain some characters that aren't used for defining rules or end of selector, & (parent selector), or interpolated variable\n    // the end of a selector is found when there is no rules in it ( {} or {\\s}) or if there is a property (because an interpolated var\n    // can \"pass\" as a selector- e.g: proper#{$erty})\n    // this one was hard to do, so please be careful if you edit this one :)\n    selector: {\n      // Initial look-ahead is used to prevent matching of blank selectors\n      pattern: /(?=\\S)[^@;{}()]?(?:[^@;{}()]|#\\{\\$[-\\w]+\\})+(?=\\s*\\{(?:\\}|\\s|[^}]+[:{][^}]+))/m,\n      inside: {\n        parent: {\n          pattern: /&/,\n          alias: 'important'\n        },\n        placeholder: /%[-\\w]+/,\n        variable: /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n      }\n    },\n    property: {\n      pattern: /(?:[\\w-]|\\$[-\\w]+|#\\{\\$[-\\w]+\\})+(?=\\s*:)/,\n      inside: {\n        variable: /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n      }\n    }\n  })\n  Prism.languages.insertBefore('scss', 'atrule', {\n    keyword: [\n      /@(?:if|else(?: if)?|for|each|while|import|extend|debug|warn|mixin|include|function|return|content)/i,\n      {\n        pattern: /( +)(?:from|through)(?= )/,\n        lookbehind: true\n      }\n    ]\n  })\n  Prism.languages.insertBefore('scss', 'important', {\n    // var and interpolated vars\n    variable: /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n  })\n  Prism.languages.insertBefore('scss', 'function', {\n    placeholder: {\n      pattern: /%[-\\w]+/,\n      alias: 'selector'\n    },\n    statement: {\n      pattern: /\\B!(?:default|optional)\\b/i,\n      alias: 'keyword'\n    },\n    boolean: /\\b(?:true|false)\\b/,\n    null: {\n      pattern: /\\bnull\\b/,\n      alias: 'keyword'\n    },\n    operator: {\n      pattern: /(\\s)(?:[-+*\\/%]|[=!]=|<=?|>=?|and|or|not)(?=\\s)/,\n      lookbehind: true\n    }\n  })\n  Prism.languages.scss['atrule'].inside.rest = Prism.languages.scss\n}\n"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiBC,IAAjB;AACAA,IAAI,CAACC,WAAL,GAAmB,MAAnB;AACAD,IAAI,CAACE,OAAL,GAAe,EAAf;;AACA,SAASF,IAAT,CAAcG,KAAd,EAAqB;EACnBA,KAAK,CAACC,SAAN,CAAgBJ,IAAhB,GAAuBG,KAAK,CAACC,SAAN,CAAgBC,MAAhB,CAAuB,KAAvB,EAA8B;IACnDC,OAAO,EAAE;MACPC,OAAO,EAAE,sCADF;MAEPC,UAAU,EAAE;IAFL,CAD0C;IAKnDC,MAAM,EAAE;MACNF,OAAO,EAAE,yCADH;MAENG,MAAM,EAAE;QACNC,IAAI,EAAE,SADA,CACU;;MADV;IAFF,CAL2C;IAWnD;IACAC,GAAG,EAAE,yBAZ8C;IAanD;IACA;IACA;IACA;IACA;IACA;IACA;IACAC,QAAQ,EAAE;MACR;MACAN,OAAO,EAAE,gFAFD;MAGRG,MAAM,EAAE;QACNI,MAAM,EAAE;UACNP,OAAO,EAAE,GADH;UAENQ,KAAK,EAAE;QAFD,CADF;QAKNC,WAAW,EAAE,SALP;QAMNC,QAAQ,EAAE;MANJ;IAHA,CApByC;IAgCnDC,QAAQ,EAAE;MACRX,OAAO,EAAE,2CADD;MAERG,MAAM,EAAE;QACNO,QAAQ,EAAE;MADJ;IAFA;EAhCyC,CAA9B,CAAvB;EAuCAd,KAAK,CAACC,SAAN,CAAgBe,YAAhB,CAA6B,MAA7B,EAAqC,QAArC,EAA+C;IAC7CC,OAAO,EAAE,CACP,qGADO,EAEP;MACEb,OAAO,EAAE,2BADX;MAEEC,UAAU,EAAE;IAFd,CAFO;EADoC,CAA/C;EASAL,KAAK,CAACC,SAAN,CAAgBe,YAAhB,CAA6B,MAA7B,EAAqC,WAArC,EAAkD;IAChD;IACAF,QAAQ,EAAE;EAFsC,CAAlD;EAIAd,KAAK,CAACC,SAAN,CAAgBe,YAAhB,CAA6B,MAA7B,EAAqC,UAArC,EAAiD;IAC/CH,WAAW,EAAE;MACXT,OAAO,EAAE,SADE;MAEXQ,KAAK,EAAE;IAFI,CADkC;IAK/CM,SAAS,EAAE;MACTd,OAAO,EAAE,4BADA;MAETQ,KAAK,EAAE;IAFE,CALoC;IAS/CO,OAAO,EAAE,oBATsC;IAU/CC,IAAI,EAAE;MACJhB,OAAO,EAAE,UADL;MAEJQ,KAAK,EAAE;IAFH,CAVyC;IAc/CS,QAAQ,EAAE;MACRjB,OAAO,EAAE,iDADD;MAERC,UAAU,EAAE;IAFJ;EAdqC,CAAjD;EAmBAL,KAAK,CAACC,SAAN,CAAgBJ,IAAhB,CAAqB,QAArB,EAA+BU,MAA/B,CAAsCe,IAAtC,GAA6CtB,KAAK,CAACC,SAAN,CAAgBJ,IAA7D;AACD"},"metadata":{},"sourceType":"script"}