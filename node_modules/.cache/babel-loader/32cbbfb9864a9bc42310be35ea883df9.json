{"ast":null,"code":"'use strict';\n\nmodule.exports = rest;\nrest.displayName = 'rest';\nrest.aliases = [];\n\nfunction rest(Prism) {\n  Prism.languages.rest = {\n    table: [{\n      pattern: /(\\s*)(?:\\+[=-]+)+\\+(?:\\r?\\n|\\r)(?:\\1(?:[+|].+)+[+|](?:\\r?\\n|\\r))+\\1(?:\\+[=-]+)+\\+/,\n      lookbehind: true,\n      inside: {\n        punctuation: /\\||(?:\\+[=-]+)+\\+/\n      }\n    }, {\n      pattern: /(\\s*)(?:=+ +)+=+(?:(?:\\r?\\n|\\r)\\1.+)+(?:\\r?\\n|\\r)\\1(?:=+ +)+=+(?=(?:\\r?\\n|\\r){2}|\\s*$)/,\n      lookbehind: true,\n      inside: {\n        punctuation: /[=-]+/\n      }\n    }],\n    // Directive-like patterns\n    'substitution-def': {\n      pattern: /(^\\s*\\.\\. )\\|(?:[^|\\s](?:[^|]*[^|\\s])?)\\| [^:]+::/m,\n      lookbehind: true,\n      inside: {\n        substitution: {\n          pattern: /^\\|(?:[^|\\s]|[^|\\s][^|]*[^|\\s])\\|/,\n          alias: 'attr-value',\n          inside: {\n            punctuation: /^\\||\\|$/\n          }\n        },\n        directive: {\n          pattern: /( +)[^:]+::/,\n          lookbehind: true,\n          alias: 'function',\n          inside: {\n            punctuation: /::$/\n          }\n        }\n      }\n    },\n    'link-target': [{\n      pattern: /(^\\s*\\.\\. )\\[[^\\]]+\\]/m,\n      lookbehind: true,\n      alias: 'string',\n      inside: {\n        punctuation: /^\\[|\\]$/\n      }\n    }, {\n      pattern: /(^\\s*\\.\\. )_(?:`[^`]+`|(?:[^:\\\\]|\\\\.)+):/m,\n      lookbehind: true,\n      alias: 'string',\n      inside: {\n        punctuation: /^_|:$/\n      }\n    }],\n    directive: {\n      pattern: /(^\\s*\\.\\. )[^:]+::/m,\n      lookbehind: true,\n      alias: 'function',\n      inside: {\n        punctuation: /::$/\n      }\n    },\n    comment: {\n      // The two alternatives try to prevent highlighting of blank comments\n      pattern: /(^\\s*\\.\\.)(?:(?: .+)?(?:(?:\\r?\\n|\\r).+)+| .+)(?=(?:\\r?\\n|\\r){2}|$)/m,\n      lookbehind: true\n    },\n    title: [// Overlined and underlined\n    {\n      pattern: /^(([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\2+)(?:\\r?\\n|\\r).+(?:\\r?\\n|\\r)\\1$/m,\n      inside: {\n        punctuation: /^[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]+|[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]+$/,\n        important: /.+/\n      }\n    }, // Underlined only\n    {\n      pattern: /(^|(?:\\r?\\n|\\r){2}).+(?:\\r?\\n|\\r)([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\2+(?=\\r?\\n|\\r|$)/,\n      lookbehind: true,\n      inside: {\n        punctuation: /[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]+$/,\n        important: /.+/\n      }\n    }],\n    hr: {\n      pattern: /((?:\\r?\\n|\\r){2})([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\2{3,}(?=(?:\\r?\\n|\\r){2})/,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    field: {\n      pattern: /(^\\s*):[^:\\r\\n]+:(?= )/m,\n      lookbehind: true,\n      alias: 'attr-name'\n    },\n    'command-line-option': {\n      pattern: /(^\\s*)(?:[+-][a-z\\d]|(?:--|\\/)[a-z\\d-]+)(?:[ =](?:[a-z][\\w-]*|<[^<>]+>))?(?:, (?:[+-][a-z\\d]|(?:--|\\/)[a-z\\d-]+)(?:[ =](?:[a-z][\\w-]*|<[^<>]+>))?)*(?=(?:\\r?\\n|\\r)? {2,}\\S)/im,\n      lookbehind: true,\n      alias: 'symbol'\n    },\n    'literal-block': {\n      pattern: /::(?:\\r?\\n|\\r){2}([ \\t]+).+(?:(?:\\r?\\n|\\r)\\1.+)*/,\n      inside: {\n        'literal-block-punctuation': {\n          pattern: /^::/,\n          alias: 'punctuation'\n        }\n      }\n    },\n    'quoted-literal-block': {\n      pattern: /::(?:\\r?\\n|\\r){2}([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]).*(?:(?:\\r?\\n|\\r)\\1.*)*/,\n      inside: {\n        'literal-block-punctuation': {\n          pattern: /^(?:::|([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\1*)/m,\n          alias: 'punctuation'\n        }\n      }\n    },\n    'list-bullet': {\n      pattern: /(^\\s*)(?:[*+\\-•‣⁃]|\\(?(?:\\d+|[a-z]|[ivxdclm]+)\\)|(?:\\d+|[a-z]|[ivxdclm]+)\\.)(?= )/im,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    'doctest-block': {\n      pattern: /(^\\s*)>>> .+(?:(?:\\r?\\n|\\r).+)*/m,\n      lookbehind: true,\n      inside: {\n        punctuation: /^>>>/\n      }\n    },\n    inline: [{\n      pattern: /(^|[\\s\\-:\\/'\"<(\\[{])(?::[^:]+:`.*?`|`.*?`:[^:]+:|(\\*\\*?|``?|\\|)(?!\\s).*?[^\\s]\\2(?=[\\s\\-.,:;!?\\\\\\/'\")\\]}]|$))/m,\n      lookbehind: true,\n      inside: {\n        bold: {\n          pattern: /(^\\*\\*).+(?=\\*\\*$)/,\n          lookbehind: true\n        },\n        italic: {\n          pattern: /(^\\*).+(?=\\*$)/,\n          lookbehind: true\n        },\n        'inline-literal': {\n          pattern: /(^``).+(?=``$)/,\n          lookbehind: true,\n          alias: 'symbol'\n        },\n        role: {\n          pattern: /^:[^:]+:|:[^:]+:$/,\n          alias: 'function',\n          inside: {\n            punctuation: /^:|:$/\n          }\n        },\n        'interpreted-text': {\n          pattern: /(^`).+(?=`$)/,\n          lookbehind: true,\n          alias: 'attr-value'\n        },\n        substitution: {\n          pattern: /(^\\|).+(?=\\|$)/,\n          lookbehind: true,\n          alias: 'attr-value'\n        },\n        punctuation: /\\*\\*?|``?|\\|/\n      }\n    }],\n    link: [{\n      pattern: /\\[[^\\]]+\\]_(?=[\\s\\-.,:;!?\\\\\\/'\")\\]}]|$)/,\n      alias: 'string',\n      inside: {\n        punctuation: /^\\[|\\]_$/\n      }\n    }, {\n      pattern: /(?:\\b[a-z\\d]+(?:[_.:+][a-z\\d]+)*_?_|`[^`]+`_?_|_`[^`]+`)(?=[\\s\\-.,:;!?\\\\\\/'\")\\]}]|$)/i,\n      alias: 'string',\n      inside: {\n        punctuation: /^_?`|`$|`?_?_$/\n      }\n    }],\n    // Line block start,\n    // quote attribution,\n    // explicit markup start,\n    // and anonymous hyperlink target shortcut (__)\n    punctuation: {\n      pattern: /(^\\s*)(?:\\|(?= |$)|(?:---?|—|\\.\\.|__)(?= )|\\.\\.$)/m,\n      lookbehind: true\n    }\n  };\n}","map":{"version":3,"names":["module","exports","rest","displayName","aliases","Prism","languages","table","pattern","lookbehind","inside","punctuation","substitution","alias","directive","comment","title","important","hr","field","inline","bold","italic","role","link"],"sources":["/Applications/MAMP/htdocs/metagen/node_modules/refractor/lang/rest.js"],"sourcesContent":["'use strict'\n\nmodule.exports = rest\nrest.displayName = 'rest'\nrest.aliases = []\nfunction rest(Prism) {\n  Prism.languages.rest = {\n    table: [\n      {\n        pattern: /(\\s*)(?:\\+[=-]+)+\\+(?:\\r?\\n|\\r)(?:\\1(?:[+|].+)+[+|](?:\\r?\\n|\\r))+\\1(?:\\+[=-]+)+\\+/,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\||(?:\\+[=-]+)+\\+/\n        }\n      },\n      {\n        pattern: /(\\s*)(?:=+ +)+=+(?:(?:\\r?\\n|\\r)\\1.+)+(?:\\r?\\n|\\r)\\1(?:=+ +)+=+(?=(?:\\r?\\n|\\r){2}|\\s*$)/,\n        lookbehind: true,\n        inside: {\n          punctuation: /[=-]+/\n        }\n      }\n    ],\n    // Directive-like patterns\n    'substitution-def': {\n      pattern: /(^\\s*\\.\\. )\\|(?:[^|\\s](?:[^|]*[^|\\s])?)\\| [^:]+::/m,\n      lookbehind: true,\n      inside: {\n        substitution: {\n          pattern: /^\\|(?:[^|\\s]|[^|\\s][^|]*[^|\\s])\\|/,\n          alias: 'attr-value',\n          inside: {\n            punctuation: /^\\||\\|$/\n          }\n        },\n        directive: {\n          pattern: /( +)[^:]+::/,\n          lookbehind: true,\n          alias: 'function',\n          inside: {\n            punctuation: /::$/\n          }\n        }\n      }\n    },\n    'link-target': [\n      {\n        pattern: /(^\\s*\\.\\. )\\[[^\\]]+\\]/m,\n        lookbehind: true,\n        alias: 'string',\n        inside: {\n          punctuation: /^\\[|\\]$/\n        }\n      },\n      {\n        pattern: /(^\\s*\\.\\. )_(?:`[^`]+`|(?:[^:\\\\]|\\\\.)+):/m,\n        lookbehind: true,\n        alias: 'string',\n        inside: {\n          punctuation: /^_|:$/\n        }\n      }\n    ],\n    directive: {\n      pattern: /(^\\s*\\.\\. )[^:]+::/m,\n      lookbehind: true,\n      alias: 'function',\n      inside: {\n        punctuation: /::$/\n      }\n    },\n    comment: {\n      // The two alternatives try to prevent highlighting of blank comments\n      pattern: /(^\\s*\\.\\.)(?:(?: .+)?(?:(?:\\r?\\n|\\r).+)+| .+)(?=(?:\\r?\\n|\\r){2}|$)/m,\n      lookbehind: true\n    },\n    title: [\n      // Overlined and underlined\n      {\n        pattern: /^(([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\2+)(?:\\r?\\n|\\r).+(?:\\r?\\n|\\r)\\1$/m,\n        inside: {\n          punctuation: /^[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]+|[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]+$/,\n          important: /.+/\n        }\n      }, // Underlined only\n      {\n        pattern: /(^|(?:\\r?\\n|\\r){2}).+(?:\\r?\\n|\\r)([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\2+(?=\\r?\\n|\\r|$)/,\n        lookbehind: true,\n        inside: {\n          punctuation: /[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]+$/,\n          important: /.+/\n        }\n      }\n    ],\n    hr: {\n      pattern: /((?:\\r?\\n|\\r){2})([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\2{3,}(?=(?:\\r?\\n|\\r){2})/,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    field: {\n      pattern: /(^\\s*):[^:\\r\\n]+:(?= )/m,\n      lookbehind: true,\n      alias: 'attr-name'\n    },\n    'command-line-option': {\n      pattern: /(^\\s*)(?:[+-][a-z\\d]|(?:--|\\/)[a-z\\d-]+)(?:[ =](?:[a-z][\\w-]*|<[^<>]+>))?(?:, (?:[+-][a-z\\d]|(?:--|\\/)[a-z\\d-]+)(?:[ =](?:[a-z][\\w-]*|<[^<>]+>))?)*(?=(?:\\r?\\n|\\r)? {2,}\\S)/im,\n      lookbehind: true,\n      alias: 'symbol'\n    },\n    'literal-block': {\n      pattern: /::(?:\\r?\\n|\\r){2}([ \\t]+).+(?:(?:\\r?\\n|\\r)\\1.+)*/,\n      inside: {\n        'literal-block-punctuation': {\n          pattern: /^::/,\n          alias: 'punctuation'\n        }\n      }\n    },\n    'quoted-literal-block': {\n      pattern: /::(?:\\r?\\n|\\r){2}([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]).*(?:(?:\\r?\\n|\\r)\\1.*)*/,\n      inside: {\n        'literal-block-punctuation': {\n          pattern: /^(?:::|([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\1*)/m,\n          alias: 'punctuation'\n        }\n      }\n    },\n    'list-bullet': {\n      pattern: /(^\\s*)(?:[*+\\-•‣⁃]|\\(?(?:\\d+|[a-z]|[ivxdclm]+)\\)|(?:\\d+|[a-z]|[ivxdclm]+)\\.)(?= )/im,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    'doctest-block': {\n      pattern: /(^\\s*)>>> .+(?:(?:\\r?\\n|\\r).+)*/m,\n      lookbehind: true,\n      inside: {\n        punctuation: /^>>>/\n      }\n    },\n    inline: [\n      {\n        pattern: /(^|[\\s\\-:\\/'\"<(\\[{])(?::[^:]+:`.*?`|`.*?`:[^:]+:|(\\*\\*?|``?|\\|)(?!\\s).*?[^\\s]\\2(?=[\\s\\-.,:;!?\\\\\\/'\")\\]}]|$))/m,\n        lookbehind: true,\n        inside: {\n          bold: {\n            pattern: /(^\\*\\*).+(?=\\*\\*$)/,\n            lookbehind: true\n          },\n          italic: {\n            pattern: /(^\\*).+(?=\\*$)/,\n            lookbehind: true\n          },\n          'inline-literal': {\n            pattern: /(^``).+(?=``$)/,\n            lookbehind: true,\n            alias: 'symbol'\n          },\n          role: {\n            pattern: /^:[^:]+:|:[^:]+:$/,\n            alias: 'function',\n            inside: {\n              punctuation: /^:|:$/\n            }\n          },\n          'interpreted-text': {\n            pattern: /(^`).+(?=`$)/,\n            lookbehind: true,\n            alias: 'attr-value'\n          },\n          substitution: {\n            pattern: /(^\\|).+(?=\\|$)/,\n            lookbehind: true,\n            alias: 'attr-value'\n          },\n          punctuation: /\\*\\*?|``?|\\|/\n        }\n      }\n    ],\n    link: [\n      {\n        pattern: /\\[[^\\]]+\\]_(?=[\\s\\-.,:;!?\\\\\\/'\")\\]}]|$)/,\n        alias: 'string',\n        inside: {\n          punctuation: /^\\[|\\]_$/\n        }\n      },\n      {\n        pattern: /(?:\\b[a-z\\d]+(?:[_.:+][a-z\\d]+)*_?_|`[^`]+`_?_|_`[^`]+`)(?=[\\s\\-.,:;!?\\\\\\/'\")\\]}]|$)/i,\n        alias: 'string',\n        inside: {\n          punctuation: /^_?`|`$|`?_?_$/\n        }\n      }\n    ],\n    // Line block start,\n    // quote attribution,\n    // explicit markup start,\n    // and anonymous hyperlink target shortcut (__)\n    punctuation: {\n      pattern: /(^\\s*)(?:\\|(?= |$)|(?:---?|—|\\.\\.|__)(?= )|\\.\\.$)/m,\n      lookbehind: true\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}