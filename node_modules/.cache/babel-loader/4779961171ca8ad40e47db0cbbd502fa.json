{"ast":null,"code":"module.exports = function (hljs) {\n  var BACKTICK_ESCAPE = {\n    begin: '`[\\\\s\\\\S]'\n  };\n  return {\n    case_insensitive: true,\n    aliases: ['ahk'],\n    keywords: {\n      keyword: 'Break Continue Critical Exit ExitApp Gosub Goto New OnExit Pause return SetBatchLines SetTimer Suspend Thread Throw Until ahk_id ahk_class ahk_pid ahk_exe ahk_group',\n      literal: 'true false NOT AND OR',\n      built_in: 'ComSpec Clipboard ClipboardAll ErrorLevel'\n    },\n    contains: [BACKTICK_ESCAPE, hljs.inherit(hljs.QUOTE_STRING_MODE, {\n      contains: [BACKTICK_ESCAPE]\n    }), hljs.COMMENT(';', '$', {\n      relevance: 0\n    }), hljs.C_BLOCK_COMMENT_MODE, {\n      className: 'number',\n      begin: hljs.NUMBER_RE,\n      relevance: 0\n    }, {\n      className: 'variable',\n      //subst would be the most accurate however fails the point of highlighting. variable is comparably the most accurate that actually has some effect\n      begin: '%[a-zA-Z0-9#_$@]+%'\n    }, {\n      className: 'built_in',\n      begin: '^\\\\s*\\\\w+\\\\s*(,|%)' //I don't really know if this is totally relevant\n\n    }, {\n      className: 'title',\n      //symbol would be most accurate however is higlighted just like built_in and that makes up a lot of AutoHotkey code\n      //meaning that it would fail to highlight anything\n      variants: [{\n        begin: '^[^\\\\n\";]+::(?!=)'\n      }, {\n        begin: '^[^\\\\n\";]+:(?!=)',\n        relevance: 0\n      } // zero relevance as it catches a lot of things\n      // followed by a single ':' in many languages\n      ]\n    }, {\n      className: 'meta',\n      begin: '^\\\\s*#\\\\w+',\n      end: '$',\n      relevance: 0\n    }, {\n      className: 'built_in',\n      begin: 'A_[a-zA-Z0-9]+'\n    }, {\n      // consecutive commas, not for highlighting but just for relevance\n      begin: ',\\\\s*,'\n    }]\n  };\n};","map":{"version":3,"names":["module","exports","hljs","BACKTICK_ESCAPE","begin","case_insensitive","aliases","keywords","keyword","literal","built_in","contains","inherit","QUOTE_STRING_MODE","COMMENT","relevance","C_BLOCK_COMMENT_MODE","className","NUMBER_RE","variants","end"],"sources":["/Applications/MAMP/htdocs/metagen/node_modules/react-syntax-highlighter/node_modules/highlight.js/lib/languages/autohotkey.js"],"sourcesContent":["module.exports = function(hljs) {\n  var BACKTICK_ESCAPE = {\n    begin: '`[\\\\s\\\\S]'\n  };\n\n  return {\n    case_insensitive: true,\n    aliases: [ 'ahk' ],\n    keywords: {\n      keyword: 'Break Continue Critical Exit ExitApp Gosub Goto New OnExit Pause return SetBatchLines SetTimer Suspend Thread Throw Until ahk_id ahk_class ahk_pid ahk_exe ahk_group',\n      literal: 'true false NOT AND OR',\n      built_in: 'ComSpec Clipboard ClipboardAll ErrorLevel',\n    },\n    contains: [\n      BACKTICK_ESCAPE,\n      hljs.inherit(hljs.QUOTE_STRING_MODE, {contains: [BACKTICK_ESCAPE]}),\n      hljs.COMMENT(';', '$', {relevance: 0}),\n      hljs.C_BLOCK_COMMENT_MODE,\n      {\n        className: 'number',\n        begin: hljs.NUMBER_RE,\n        relevance: 0\n      },\n      {\n        className: 'variable', //subst would be the most accurate however fails the point of highlighting. variable is comparably the most accurate that actually has some effect\n        begin: '%[a-zA-Z0-9#_$@]+%'\n      },\n      {\n        className: 'built_in',\n        begin: '^\\\\s*\\\\w+\\\\s*(,|%)'\n        //I don't really know if this is totally relevant\n      },\n      {\n        className: 'title', //symbol would be most accurate however is higlighted just like built_in and that makes up a lot of AutoHotkey code\n\t\t                        //meaning that it would fail to highlight anything\n        variants: [\n          {begin: '^[^\\\\n\";]+::(?!=)'},\n          {begin: '^[^\\\\n\";]+:(?!=)', relevance: 0} // zero relevance as it catches a lot of things\n                                                    // followed by a single ':' in many languages\n        ]\n      },\n      {\n        className: 'meta', \n        begin: '^\\\\s*#\\\\w+', end:'$',\n        relevance: 0\n      },\n\t    {\n        className: 'built_in',\n        begin: 'A_[a-zA-Z0-9]+'\n      },\n      {\n        // consecutive commas, not for highlighting but just for relevance\n        begin: ',\\\\s*,'\n      }\n    ]\n  }\n};"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiB,UAASC,IAAT,EAAe;EAC9B,IAAIC,eAAe,GAAG;IACpBC,KAAK,EAAE;EADa,CAAtB;EAIA,OAAO;IACLC,gBAAgB,EAAE,IADb;IAELC,OAAO,EAAE,CAAE,KAAF,CAFJ;IAGLC,QAAQ,EAAE;MACRC,OAAO,EAAE,sKADD;MAERC,OAAO,EAAE,uBAFD;MAGRC,QAAQ,EAAE;IAHF,CAHL;IAQLC,QAAQ,EAAE,CACRR,eADQ,EAERD,IAAI,CAACU,OAAL,CAAaV,IAAI,CAACW,iBAAlB,EAAqC;MAACF,QAAQ,EAAE,CAACR,eAAD;IAAX,CAArC,CAFQ,EAGRD,IAAI,CAACY,OAAL,CAAa,GAAb,EAAkB,GAAlB,EAAuB;MAACC,SAAS,EAAE;IAAZ,CAAvB,CAHQ,EAIRb,IAAI,CAACc,oBAJG,EAKR;MACEC,SAAS,EAAE,QADb;MAEEb,KAAK,EAAEF,IAAI,CAACgB,SAFd;MAGEH,SAAS,EAAE;IAHb,CALQ,EAUR;MACEE,SAAS,EAAE,UADb;MACyB;MACvBb,KAAK,EAAE;IAFT,CAVQ,EAcR;MACEa,SAAS,EAAE,UADb;MAEEb,KAAK,EAAE,oBAFT,CAGE;;IAHF,CAdQ,EAmBR;MACEa,SAAS,EAAE,OADb;MACsB;MACF;MAClBE,QAAQ,EAAE,CACR;QAACf,KAAK,EAAE;MAAR,CADQ,EAER;QAACA,KAAK,EAAE,kBAAR;QAA4BW,SAAS,EAAE;MAAvC,CAFQ,CAEkC;MACA;MAHlC;IAHZ,CAnBQ,EA4BR;MACEE,SAAS,EAAE,MADb;MAEEb,KAAK,EAAE,YAFT;MAEuBgB,GAAG,EAAC,GAF3B;MAGEL,SAAS,EAAE;IAHb,CA5BQ,EAiCT;MACGE,SAAS,EAAE,UADd;MAEGb,KAAK,EAAE;IAFV,CAjCS,EAqCR;MACE;MACAA,KAAK,EAAE;IAFT,CArCQ;EARL,CAAP;AAmDD,CAxDD"},"metadata":{},"sourceType":"script"}