{"ast":null,"code":"module.exports = function (hljs) {\n  var COMMENT = {\n    variants: [hljs.COMMENT('--', '$'), hljs.COMMENT('{-', '-}', {\n      contains: ['self']\n    })]\n  };\n  var CONSTRUCTOR = {\n    className: 'type',\n    begin: '\\\\b[A-Z][\\\\w\\']*',\n    // TODO: other constructors (built-in, infix).\n    relevance: 0\n  };\n  var LIST = {\n    begin: '\\\\(',\n    end: '\\\\)',\n    illegal: '\"',\n    contains: [{\n      className: 'type',\n      begin: '\\\\b[A-Z][\\\\w]*(\\\\((\\\\.\\\\.|,|\\\\w+)\\\\))?'\n    }, COMMENT]\n  };\n  var RECORD = {\n    begin: '{',\n    end: '}',\n    contains: LIST.contains\n  };\n  var CHARACTER = {\n    className: 'string',\n    begin: '\\'\\\\\\\\?.',\n    end: '\\'',\n    illegal: '.'\n  };\n  return {\n    keywords: 'let in if then else case of where module import exposing ' + 'type alias as infix infixl infixr port effect command subscription',\n    contains: [// Top-level constructions.\n    {\n      beginKeywords: 'port effect module',\n      end: 'exposing',\n      keywords: 'port effect module where command subscription exposing',\n      contains: [LIST, COMMENT],\n      illegal: '\\\\W\\\\.|;'\n    }, {\n      begin: 'import',\n      end: '$',\n      keywords: 'import as exposing',\n      contains: [LIST, COMMENT],\n      illegal: '\\\\W\\\\.|;'\n    }, {\n      begin: 'type',\n      end: '$',\n      keywords: 'type alias',\n      contains: [CONSTRUCTOR, LIST, RECORD, COMMENT]\n    }, {\n      beginKeywords: 'infix infixl infixr',\n      end: '$',\n      contains: [hljs.C_NUMBER_MODE, COMMENT]\n    }, {\n      begin: 'port',\n      end: '$',\n      keywords: 'port',\n      contains: [COMMENT]\n    }, // Literals and names.\n    CHARACTER, hljs.QUOTE_STRING_MODE, hljs.C_NUMBER_MODE, CONSTRUCTOR, hljs.inherit(hljs.TITLE_MODE, {\n      begin: '^[_a-z][\\\\w\\']*'\n    }), COMMENT, {\n      begin: '->|<-'\n    } // No markup, relevance booster\n    ],\n    illegal: /;/\n  };\n};","map":{"version":3,"names":["module","exports","hljs","COMMENT","variants","contains","CONSTRUCTOR","className","begin","relevance","LIST","end","illegal","RECORD","CHARACTER","keywords","beginKeywords","C_NUMBER_MODE","QUOTE_STRING_MODE","inherit","TITLE_MODE"],"sources":["/Applications/MAMP/htdocs/metagen/node_modules/lowlight/node_modules/highlight.js/lib/languages/elm.js"],"sourcesContent":["module.exports = function(hljs) {\n  var COMMENT = {\n    variants: [\n      hljs.COMMENT('--', '$'),\n      hljs.COMMENT(\n        '{-',\n        '-}',\n        {\n          contains: ['self']\n        }\n      )\n    ]\n  };\n\n  var CONSTRUCTOR = {\n    className: 'type',\n    begin: '\\\\b[A-Z][\\\\w\\']*', // TODO: other constructors (built-in, infix).\n    relevance: 0\n  };\n\n  var LIST = {\n    begin: '\\\\(', end: '\\\\)',\n    illegal: '\"',\n    contains: [\n      {className: 'type', begin: '\\\\b[A-Z][\\\\w]*(\\\\((\\\\.\\\\.|,|\\\\w+)\\\\))?'},\n      COMMENT\n    ]\n  };\n\n  var RECORD = {\n    begin: '{', end: '}',\n    contains: LIST.contains\n  };\n\n  var CHARACTER = {\n    className: 'string',\n    begin: '\\'\\\\\\\\?.', end: '\\'',\n    illegal: '.'\n  };\n\n  return {\n    keywords:\n      'let in if then else case of where module import exposing ' +\n      'type alias as infix infixl infixr port effect command subscription',\n    contains: [\n\n      // Top-level constructions.\n\n      {\n        beginKeywords: 'port effect module', end: 'exposing',\n        keywords: 'port effect module where command subscription exposing',\n        contains: [LIST, COMMENT],\n        illegal: '\\\\W\\\\.|;'\n      },\n      {\n        begin: 'import', end: '$',\n        keywords: 'import as exposing',\n        contains: [LIST, COMMENT],\n        illegal: '\\\\W\\\\.|;'\n      },\n      {\n        begin: 'type', end: '$',\n        keywords: 'type alias',\n        contains: [CONSTRUCTOR, LIST, RECORD, COMMENT]\n      },\n      {\n        beginKeywords: 'infix infixl infixr', end: '$',\n        contains: [hljs.C_NUMBER_MODE, COMMENT]\n      },\n      {\n        begin: 'port', end: '$',\n        keywords: 'port',\n        contains: [COMMENT]\n      },\n\n      // Literals and names.\n\n      CHARACTER,\n      hljs.QUOTE_STRING_MODE,\n      hljs.C_NUMBER_MODE,\n      CONSTRUCTOR,\n      hljs.inherit(hljs.TITLE_MODE, {begin: '^[_a-z][\\\\w\\']*'}),\n      COMMENT,\n\n      {begin: '->|<-'} // No markup, relevance booster\n    ],\n    illegal: /;/\n  };\n};"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiB,UAASC,IAAT,EAAe;EAC9B,IAAIC,OAAO,GAAG;IACZC,QAAQ,EAAE,CACRF,IAAI,CAACC,OAAL,CAAa,IAAb,EAAmB,GAAnB,CADQ,EAERD,IAAI,CAACC,OAAL,CACE,IADF,EAEE,IAFF,EAGE;MACEE,QAAQ,EAAE,CAAC,MAAD;IADZ,CAHF,CAFQ;EADE,CAAd;EAaA,IAAIC,WAAW,GAAG;IAChBC,SAAS,EAAE,MADK;IAEhBC,KAAK,EAAE,kBAFS;IAEW;IAC3BC,SAAS,EAAE;EAHK,CAAlB;EAMA,IAAIC,IAAI,GAAG;IACTF,KAAK,EAAE,KADE;IACKG,GAAG,EAAE,KADV;IAETC,OAAO,EAAE,GAFA;IAGTP,QAAQ,EAAE,CACR;MAACE,SAAS,EAAE,MAAZ;MAAoBC,KAAK,EAAE;IAA3B,CADQ,EAERL,OAFQ;EAHD,CAAX;EASA,IAAIU,MAAM,GAAG;IACXL,KAAK,EAAE,GADI;IACCG,GAAG,EAAE,GADN;IAEXN,QAAQ,EAAEK,IAAI,CAACL;EAFJ,CAAb;EAKA,IAAIS,SAAS,GAAG;IACdP,SAAS,EAAE,QADG;IAEdC,KAAK,EAAE,UAFO;IAEKG,GAAG,EAAE,IAFV;IAGdC,OAAO,EAAE;EAHK,CAAhB;EAMA,OAAO;IACLG,QAAQ,EACN,8DACA,oEAHG;IAILV,QAAQ,EAAE,CAER;IAEA;MACEW,aAAa,EAAE,oBADjB;MACuCL,GAAG,EAAE,UAD5C;MAEEI,QAAQ,EAAE,wDAFZ;MAGEV,QAAQ,EAAE,CAACK,IAAD,EAAOP,OAAP,CAHZ;MAIES,OAAO,EAAE;IAJX,CAJQ,EAUR;MACEJ,KAAK,EAAE,QADT;MACmBG,GAAG,EAAE,GADxB;MAEEI,QAAQ,EAAE,oBAFZ;MAGEV,QAAQ,EAAE,CAACK,IAAD,EAAOP,OAAP,CAHZ;MAIES,OAAO,EAAE;IAJX,CAVQ,EAgBR;MACEJ,KAAK,EAAE,MADT;MACiBG,GAAG,EAAE,GADtB;MAEEI,QAAQ,EAAE,YAFZ;MAGEV,QAAQ,EAAE,CAACC,WAAD,EAAcI,IAAd,EAAoBG,MAApB,EAA4BV,OAA5B;IAHZ,CAhBQ,EAqBR;MACEa,aAAa,EAAE,qBADjB;MACwCL,GAAG,EAAE,GAD7C;MAEEN,QAAQ,EAAE,CAACH,IAAI,CAACe,aAAN,EAAqBd,OAArB;IAFZ,CArBQ,EAyBR;MACEK,KAAK,EAAE,MADT;MACiBG,GAAG,EAAE,GADtB;MAEEI,QAAQ,EAAE,MAFZ;MAGEV,QAAQ,EAAE,CAACF,OAAD;IAHZ,CAzBQ,EA+BR;IAEAW,SAjCQ,EAkCRZ,IAAI,CAACgB,iBAlCG,EAmCRhB,IAAI,CAACe,aAnCG,EAoCRX,WApCQ,EAqCRJ,IAAI,CAACiB,OAAL,CAAajB,IAAI,CAACkB,UAAlB,EAA8B;MAACZ,KAAK,EAAE;IAAR,CAA9B,CArCQ,EAsCRL,OAtCQ,EAwCR;MAACK,KAAK,EAAE;IAAR,CAxCQ,CAwCS;IAxCT,CAJL;IA8CLI,OAAO,EAAE;EA9CJ,CAAP;AAgDD,CAxFD"},"metadata":{},"sourceType":"script"}