{"ast":null,"code":"'use strict';\n\nmodule.exports = abnf;\nabnf.displayName = 'abnf';\nabnf.aliases = [];\n\nfunction abnf(Prism) {\n  ;\n\n  (function (Prism) {\n    var coreRules = '(?:ALPHA|BIT|CHAR|CR|CRLF|CTL|DIGIT|DQUOTE|HEXDIG|HTAB|LF|LWSP|OCTET|SP|VCHAR|WSP)';\n    Prism.languages.abnf = {\n      comment: /;.*/,\n      string: {\n        pattern: /(?:%[is])?\"[^\"\\n\\r]*\"/,\n        greedy: true,\n        inside: {\n          punctuation: /^%[is]/\n        }\n      },\n      range: {\n        pattern: /%(?:b[01]+-[01]+|d\\d+-\\d+|x[A-F\\d]+-[A-F\\d]+)/i,\n        alias: 'number'\n      },\n      terminal: {\n        pattern: /%(?:b[01]+(?:\\.[01]+)*|d\\d+(?:\\.\\d+)*|x[A-F\\d]+(?:\\.[A-F\\d]+)*)/i,\n        alias: 'number'\n      },\n      repetition: {\n        pattern: /(^|[^\\w-])(?:\\d*\\*\\d*|\\d+)/,\n        lookbehind: true,\n        alias: 'operator'\n      },\n      definition: {\n        pattern: /(^[ \\t]*)(?:[a-z][\\w-]*|<[^>\\r\\n]*>)(?=\\s*=)/m,\n        lookbehind: true,\n        alias: 'keyword',\n        inside: {\n          punctuation: /<|>/\n        }\n      },\n      'core-rule': {\n        pattern: RegExp('(?:(^|[^<\\\\w-])' + coreRules + '|<' + coreRules + '>)(?![\\\\w-])', 'i'),\n        lookbehind: true,\n        alias: ['rule', 'constant'],\n        inside: {\n          punctuation: /<|>/\n        }\n      },\n      rule: {\n        pattern: /(^|[^<\\w-])[a-z][\\w-]*|<[^>\\r\\n]*>/i,\n        lookbehind: true,\n        inside: {\n          punctuation: /<|>/\n        }\n      },\n      operator: /=\\/?|\\//,\n      punctuation: /[()\\[\\]]/\n    };\n  })(Prism);\n}","map":{"version":3,"names":["module","exports","abnf","displayName","aliases","Prism","coreRules","languages","comment","string","pattern","greedy","inside","punctuation","range","alias","terminal","repetition","lookbehind","definition","RegExp","rule","operator"],"sources":["/Applications/MAMP/htdocs/metagen/node_modules/refractor/lang/abnf.js"],"sourcesContent":["'use strict'\n\nmodule.exports = abnf\nabnf.displayName = 'abnf'\nabnf.aliases = []\nfunction abnf(Prism) {\n  ;(function(Prism) {\n    var coreRules =\n      '(?:ALPHA|BIT|CHAR|CR|CRLF|CTL|DIGIT|DQUOTE|HEXDIG|HTAB|LF|LWSP|OCTET|SP|VCHAR|WSP)'\n    Prism.languages.abnf = {\n      comment: /;.*/,\n      string: {\n        pattern: /(?:%[is])?\"[^\"\\n\\r]*\"/,\n        greedy: true,\n        inside: {\n          punctuation: /^%[is]/\n        }\n      },\n      range: {\n        pattern: /%(?:b[01]+-[01]+|d\\d+-\\d+|x[A-F\\d]+-[A-F\\d]+)/i,\n        alias: 'number'\n      },\n      terminal: {\n        pattern: /%(?:b[01]+(?:\\.[01]+)*|d\\d+(?:\\.\\d+)*|x[A-F\\d]+(?:\\.[A-F\\d]+)*)/i,\n        alias: 'number'\n      },\n      repetition: {\n        pattern: /(^|[^\\w-])(?:\\d*\\*\\d*|\\d+)/,\n        lookbehind: true,\n        alias: 'operator'\n      },\n      definition: {\n        pattern: /(^[ \\t]*)(?:[a-z][\\w-]*|<[^>\\r\\n]*>)(?=\\s*=)/m,\n        lookbehind: true,\n        alias: 'keyword',\n        inside: {\n          punctuation: /<|>/\n        }\n      },\n      'core-rule': {\n        pattern: RegExp(\n          '(?:(^|[^<\\\\w-])' + coreRules + '|<' + coreRules + '>)(?![\\\\w-])',\n          'i'\n        ),\n        lookbehind: true,\n        alias: ['rule', 'constant'],\n        inside: {\n          punctuation: /<|>/\n        }\n      },\n      rule: {\n        pattern: /(^|[^<\\w-])[a-z][\\w-]*|<[^>\\r\\n]*>/i,\n        lookbehind: true,\n        inside: {\n          punctuation: /<|>/\n        }\n      },\n      operator: /=\\/?|\\//,\n      punctuation: /[()\\[\\]]/\n    }\n  })(Prism)\n}\n"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiBC,IAAjB;AACAA,IAAI,CAACC,WAAL,GAAmB,MAAnB;AACAD,IAAI,CAACE,OAAL,GAAe,EAAf;;AACA,SAASF,IAAT,CAAcG,KAAd,EAAqB;EACnB;;EAAC,CAAC,UAASA,KAAT,EAAgB;IAChB,IAAIC,SAAS,GACX,oFADF;IAEAD,KAAK,CAACE,SAAN,CAAgBL,IAAhB,GAAuB;MACrBM,OAAO,EAAE,KADY;MAErBC,MAAM,EAAE;QACNC,OAAO,EAAE,uBADH;QAENC,MAAM,EAAE,IAFF;QAGNC,MAAM,EAAE;UACNC,WAAW,EAAE;QADP;MAHF,CAFa;MASrBC,KAAK,EAAE;QACLJ,OAAO,EAAE,gDADJ;QAELK,KAAK,EAAE;MAFF,CATc;MAarBC,QAAQ,EAAE;QACRN,OAAO,EAAE,kEADD;QAERK,KAAK,EAAE;MAFC,CAbW;MAiBrBE,UAAU,EAAE;QACVP,OAAO,EAAE,4BADC;QAEVQ,UAAU,EAAE,IAFF;QAGVH,KAAK,EAAE;MAHG,CAjBS;MAsBrBI,UAAU,EAAE;QACVT,OAAO,EAAE,+CADC;QAEVQ,UAAU,EAAE,IAFF;QAGVH,KAAK,EAAE,SAHG;QAIVH,MAAM,EAAE;UACNC,WAAW,EAAE;QADP;MAJE,CAtBS;MA8BrB,aAAa;QACXH,OAAO,EAAEU,MAAM,CACb,oBAAoBd,SAApB,GAAgC,IAAhC,GAAuCA,SAAvC,GAAmD,cADtC,EAEb,GAFa,CADJ;QAKXY,UAAU,EAAE,IALD;QAMXH,KAAK,EAAE,CAAC,MAAD,EAAS,UAAT,CANI;QAOXH,MAAM,EAAE;UACNC,WAAW,EAAE;QADP;MAPG,CA9BQ;MAyCrBQ,IAAI,EAAE;QACJX,OAAO,EAAE,qCADL;QAEJQ,UAAU,EAAE,IAFR;QAGJN,MAAM,EAAE;UACNC,WAAW,EAAE;QADP;MAHJ,CAzCe;MAgDrBS,QAAQ,EAAE,SAhDW;MAiDrBT,WAAW,EAAE;IAjDQ,CAAvB;EAmDD,CAtDA,EAsDER,KAtDF;AAuDF"},"metadata":{},"sourceType":"script"}