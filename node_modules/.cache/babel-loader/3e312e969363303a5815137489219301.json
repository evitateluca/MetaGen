{"ast":null,"code":"module.exports = function (hljs) {\n  var keywords = {\n    'builtin-name': // keywords\n    '!= % %= & &= * ** **= *= *map ' + '+ += , --build-class-- --import-- -= . / // //= ' + '/= < << <<= <= = > >= >> >>= ' + '@ @= ^ ^= abs accumulate all and any ap-compose ' + 'ap-dotimes ap-each ap-each-while ap-filter ap-first ap-if ap-last ap-map ap-map-when ap-pipe ' + 'ap-reduce ap-reject apply as-> ascii assert assoc bin break butlast ' + 'callable calling-module-name car case cdr chain chr coll? combinations compile ' + 'compress cond cons cons? continue count curry cut cycle dec ' + 'def default-method defclass defmacro defmacro-alias defmacro/g! defmain defmethod defmulti defn ' + 'defn-alias defnc defnr defreader defseq del delattr delete-route dict-comp dir ' + 'disassemble dispatch-reader-macro distinct divmod do doto drop drop-last drop-while empty? ' + 'end-sequence eval eval-and-compile eval-when-compile even? every? except exec filter first ' + 'flatten float? fn fnc fnr for for* format fraction genexpr ' + 'gensym get getattr global globals group-by hasattr hash hex id ' + 'identity if if* if-not if-python2 import in inc input instance? ' + 'integer integer-char? integer? interleave interpose is is-coll is-cons is-empty is-even ' + 'is-every is-float is-instance is-integer is-integer-char is-iterable is-iterator is-keyword is-neg is-none ' + 'is-not is-numeric is-odd is-pos is-string is-symbol is-zero isinstance islice issubclass ' + 'iter iterable? iterate iterator? keyword keyword? lambda last len let ' + 'lif lif-not list* list-comp locals loop macro-error macroexpand macroexpand-1 macroexpand-all ' + 'map max merge-with method-decorator min multi-decorator multicombinations name neg? next ' + 'none? nonlocal not not-in not? nth numeric? oct odd? open ' + 'or ord partition permutations pos? post-route postwalk pow prewalk print ' + 'product profile/calls profile/cpu put-route quasiquote quote raise range read read-str ' + 'recursive-replace reduce remove repeat repeatedly repr require rest round route ' + 'route-with-methods rwm second seq set-comp setattr setv some sorted string ' + 'string? sum switch symbol? take take-nth take-while tee try unless ' + 'unquote unquote-splicing vars walk when while with with* with-decorator with-gensyms ' + 'xi xor yield yield-from zero? zip zip-longest | |= ~'\n  };\n  var SYMBOLSTART = 'a-zA-Z_\\\\-!.?+*=<>&#\\'';\n  var SYMBOL_RE = '[' + SYMBOLSTART + '][' + SYMBOLSTART + '0-9/;:]*';\n  var SIMPLE_NUMBER_RE = '[-+]?\\\\d+(\\\\.\\\\d+)?';\n  var SHEBANG = {\n    className: 'meta',\n    begin: '^#!',\n    end: '$'\n  };\n  var SYMBOL = {\n    begin: SYMBOL_RE,\n    relevance: 0\n  };\n  var NUMBER = {\n    className: 'number',\n    begin: SIMPLE_NUMBER_RE,\n    relevance: 0\n  };\n  var STRING = hljs.inherit(hljs.QUOTE_STRING_MODE, {\n    illegal: null\n  });\n  var COMMENT = hljs.COMMENT(';', '$', {\n    relevance: 0\n  });\n  var LITERAL = {\n    className: 'literal',\n    begin: /\\b([Tt]rue|[Ff]alse|nil|None)\\b/\n  };\n  var COLLECTION = {\n    begin: '[\\\\[\\\\{]',\n    end: '[\\\\]\\\\}]'\n  };\n  var HINT = {\n    className: 'comment',\n    begin: '\\\\^' + SYMBOL_RE\n  };\n  var HINT_COL = hljs.COMMENT('\\\\^\\\\{', '\\\\}');\n  var KEY = {\n    className: 'symbol',\n    begin: '[:]{1,2}' + SYMBOL_RE\n  };\n  var LIST = {\n    begin: '\\\\(',\n    end: '\\\\)'\n  };\n  var BODY = {\n    endsWithParent: true,\n    relevance: 0\n  };\n  var NAME = {\n    keywords: keywords,\n    lexemes: SYMBOL_RE,\n    className: 'name',\n    begin: SYMBOL_RE,\n    starts: BODY\n  };\n  var DEFAULT_CONTAINS = [LIST, STRING, HINT, HINT_COL, COMMENT, KEY, COLLECTION, NUMBER, LITERAL, SYMBOL];\n  LIST.contains = [hljs.COMMENT('comment', ''), NAME, BODY];\n  BODY.contains = DEFAULT_CONTAINS;\n  COLLECTION.contains = DEFAULT_CONTAINS;\n  return {\n    aliases: ['hylang'],\n    illegal: /\\S/,\n    contains: [SHEBANG, LIST, STRING, HINT, HINT_COL, COMMENT, KEY, COLLECTION, NUMBER, LITERAL]\n  };\n};","map":{"version":3,"names":["module","exports","hljs","keywords","SYMBOLSTART","SYMBOL_RE","SIMPLE_NUMBER_RE","SHEBANG","className","begin","end","SYMBOL","relevance","NUMBER","STRING","inherit","QUOTE_STRING_MODE","illegal","COMMENT","LITERAL","COLLECTION","HINT","HINT_COL","KEY","LIST","BODY","endsWithParent","NAME","lexemes","starts","DEFAULT_CONTAINS","contains","aliases"],"sources":["/Applications/MAMP/htdocs/metagen/node_modules/lowlight/node_modules/highlight.js/lib/languages/hy.js"],"sourcesContent":["module.exports = function(hljs) {\n  var keywords = {\n    'builtin-name':\n      // keywords\n      '!= % %= & &= * ** **= *= *map ' +\n      '+ += , --build-class-- --import-- -= . / // //= ' +\n      '/= < << <<= <= = > >= >> >>= ' +\n      '@ @= ^ ^= abs accumulate all and any ap-compose ' +\n      'ap-dotimes ap-each ap-each-while ap-filter ap-first ap-if ap-last ap-map ap-map-when ap-pipe ' +\n      'ap-reduce ap-reject apply as-> ascii assert assoc bin break butlast ' +\n      'callable calling-module-name car case cdr chain chr coll? combinations compile ' +\n      'compress cond cons cons? continue count curry cut cycle dec ' +\n      'def default-method defclass defmacro defmacro-alias defmacro/g! defmain defmethod defmulti defn ' +\n      'defn-alias defnc defnr defreader defseq del delattr delete-route dict-comp dir ' +\n      'disassemble dispatch-reader-macro distinct divmod do doto drop drop-last drop-while empty? ' +\n      'end-sequence eval eval-and-compile eval-when-compile even? every? except exec filter first ' +\n      'flatten float? fn fnc fnr for for* format fraction genexpr ' +\n      'gensym get getattr global globals group-by hasattr hash hex id ' +\n      'identity if if* if-not if-python2 import in inc input instance? ' +\n      'integer integer-char? integer? interleave interpose is is-coll is-cons is-empty is-even ' +\n      'is-every is-float is-instance is-integer is-integer-char is-iterable is-iterator is-keyword is-neg is-none ' +\n      'is-not is-numeric is-odd is-pos is-string is-symbol is-zero isinstance islice issubclass ' +\n      'iter iterable? iterate iterator? keyword keyword? lambda last len let ' +\n      'lif lif-not list* list-comp locals loop macro-error macroexpand macroexpand-1 macroexpand-all ' +\n      'map max merge-with method-decorator min multi-decorator multicombinations name neg? next ' +\n      'none? nonlocal not not-in not? nth numeric? oct odd? open ' +\n      'or ord partition permutations pos? post-route postwalk pow prewalk print ' +\n      'product profile/calls profile/cpu put-route quasiquote quote raise range read read-str ' +\n      'recursive-replace reduce remove repeat repeatedly repr require rest round route ' +\n      'route-with-methods rwm second seq set-comp setattr setv some sorted string ' +\n      'string? sum switch symbol? take take-nth take-while tee try unless ' +\n      'unquote unquote-splicing vars walk when while with with* with-decorator with-gensyms ' +\n      'xi xor yield yield-from zero? zip zip-longest | |= ~'\n   };\n\n  var SYMBOLSTART = 'a-zA-Z_\\\\-!.?+*=<>&#\\'';\n  var SYMBOL_RE = '[' + SYMBOLSTART + '][' + SYMBOLSTART + '0-9/;:]*';\n  var SIMPLE_NUMBER_RE = '[-+]?\\\\d+(\\\\.\\\\d+)?';\n\n  var SHEBANG = {\n    className: 'meta',\n    begin: '^#!', end: '$'\n  };\n\n  var SYMBOL = {\n    begin: SYMBOL_RE,\n    relevance: 0\n  };\n  var NUMBER = {\n    className: 'number', begin: SIMPLE_NUMBER_RE,\n    relevance: 0\n  };\n  var STRING = hljs.inherit(hljs.QUOTE_STRING_MODE, {illegal: null});\n  var COMMENT = hljs.COMMENT(\n    ';',\n    '$',\n    {\n      relevance: 0\n    }\n  );\n  var LITERAL = {\n    className: 'literal',\n    begin: /\\b([Tt]rue|[Ff]alse|nil|None)\\b/\n  };\n  var COLLECTION = {\n    begin: '[\\\\[\\\\{]', end: '[\\\\]\\\\}]'\n  };\n  var HINT = {\n    className: 'comment',\n    begin: '\\\\^' + SYMBOL_RE\n  };\n  var HINT_COL = hljs.COMMENT('\\\\^\\\\{', '\\\\}');\n  var KEY = {\n    className: 'symbol',\n    begin: '[:]{1,2}' + SYMBOL_RE\n  };\n  var LIST = {\n    begin: '\\\\(', end: '\\\\)'\n  };\n  var BODY = {\n    endsWithParent: true,\n    relevance: 0\n  };\n  var NAME = {\n    keywords: keywords,\n    lexemes: SYMBOL_RE,\n    className: 'name', begin: SYMBOL_RE,\n    starts: BODY\n  };\n  var DEFAULT_CONTAINS = [LIST, STRING, HINT, HINT_COL, COMMENT, KEY, COLLECTION, NUMBER, LITERAL, SYMBOL];\n\n  LIST.contains = [hljs.COMMENT('comment', ''), NAME, BODY];\n  BODY.contains = DEFAULT_CONTAINS;\n  COLLECTION.contains = DEFAULT_CONTAINS;\n\n  return {\n    aliases: ['hylang'],\n    illegal: /\\S/,\n    contains: [SHEBANG, LIST, STRING, HINT, HINT_COL, COMMENT, KEY, COLLECTION, NUMBER, LITERAL]\n  }\n};"],"mappings":"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"},"metadata":{},"sourceType":"script"}