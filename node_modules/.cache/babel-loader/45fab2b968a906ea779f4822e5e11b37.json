{"ast":null,"code":"module.exports = function (hljs) {\n  var KEYWORDS = {\n    keyword: // JS keywords\n    'in if for while finally new do return else break catch instanceof throw try this ' + 'switch continue typeof delete debugger super yield import export from as default await ' + // Coffee keywords\n    'then unless until loop of by when and or is isnt not',\n    literal: // JS literals\n    'true false null undefined ' + // Coffee literals\n    'yes no on off',\n    built_in: 'npm require console print module global window document'\n  };\n  var JS_IDENT_RE = '[A-Za-z$_][0-9A-Za-z$_]*';\n  var SUBST = {\n    className: 'subst',\n    begin: /#\\{/,\n    end: /}/,\n    keywords: KEYWORDS\n  };\n  var EXPRESSIONS = [hljs.BINARY_NUMBER_MODE, hljs.inherit(hljs.C_NUMBER_MODE, {\n    starts: {\n      end: '(\\\\s*/)?',\n      relevance: 0\n    }\n  }), // a number tries to eat the following slash to prevent treating it as a regexp\n  {\n    className: 'string',\n    variants: [{\n      begin: /'''/,\n      end: /'''/,\n      contains: [hljs.BACKSLASH_ESCAPE]\n    }, {\n      begin: /'/,\n      end: /'/,\n      contains: [hljs.BACKSLASH_ESCAPE]\n    }, {\n      begin: /\"\"\"/,\n      end: /\"\"\"/,\n      contains: [hljs.BACKSLASH_ESCAPE, SUBST]\n    }, {\n      begin: /\"/,\n      end: /\"/,\n      contains: [hljs.BACKSLASH_ESCAPE, SUBST]\n    }]\n  }, {\n    className: 'regexp',\n    variants: [{\n      begin: '///',\n      end: '///',\n      contains: [SUBST, hljs.HASH_COMMENT_MODE]\n    }, {\n      begin: '//[gim]*',\n      relevance: 0\n    }, {\n      // regex can't start with space to parse x / 2 / 3 as two divisions\n      // regex can't start with *, and it supports an \"illegal\" in the main mode\n      begin: /\\/(?![ *])(\\\\\\/|.)*?\\/[gim]*(?=\\W|$)/\n    }]\n  }, {\n    begin: '@' + JS_IDENT_RE // relevance booster\n\n  }, {\n    subLanguage: 'javascript',\n    excludeBegin: true,\n    excludeEnd: true,\n    variants: [{\n      begin: '```',\n      end: '```'\n    }, {\n      begin: '`',\n      end: '`'\n    }]\n  }];\n  SUBST.contains = EXPRESSIONS;\n  var TITLE = hljs.inherit(hljs.TITLE_MODE, {\n    begin: JS_IDENT_RE\n  });\n  var PARAMS_RE = '(\\\\(.*\\\\))?\\\\s*\\\\B[-=]>';\n  var PARAMS = {\n    className: 'params',\n    begin: '\\\\([^\\\\(]',\n    returnBegin: true,\n\n    /* We need another contained nameless mode to not have every nested\n    pair of parens to be called \"params\" */\n    contains: [{\n      begin: /\\(/,\n      end: /\\)/,\n      keywords: KEYWORDS,\n      contains: ['self'].concat(EXPRESSIONS)\n    }]\n  };\n  return {\n    aliases: ['coffee', 'cson', 'iced'],\n    keywords: KEYWORDS,\n    illegal: /\\/\\*/,\n    contains: EXPRESSIONS.concat([hljs.COMMENT('###', '###'), hljs.HASH_COMMENT_MODE, {\n      className: 'function',\n      begin: '^\\\\s*' + JS_IDENT_RE + '\\\\s*=\\\\s*' + PARAMS_RE,\n      end: '[-=]>',\n      returnBegin: true,\n      contains: [TITLE, PARAMS]\n    }, {\n      // anonymous function start\n      begin: /[:\\(,=]\\s*/,\n      relevance: 0,\n      contains: [{\n        className: 'function',\n        begin: PARAMS_RE,\n        end: '[-=]>',\n        returnBegin: true,\n        contains: [PARAMS]\n      }]\n    }, {\n      className: 'class',\n      beginKeywords: 'class',\n      end: '$',\n      illegal: /[:=\"\\[\\]]/,\n      contains: [{\n        beginKeywords: 'extends',\n        endsWithParent: true,\n        illegal: /[:=\"\\[\\]]/,\n        contains: [TITLE]\n      }, TITLE]\n    }, {\n      begin: JS_IDENT_RE + ':',\n      end: ':',\n      returnBegin: true,\n      returnEnd: true,\n      relevance: 0\n    }])\n  };\n};","map":{"version":3,"names":["module","exports","hljs","KEYWORDS","keyword","literal","built_in","JS_IDENT_RE","SUBST","className","begin","end","keywords","EXPRESSIONS","BINARY_NUMBER_MODE","inherit","C_NUMBER_MODE","starts","relevance","variants","contains","BACKSLASH_ESCAPE","HASH_COMMENT_MODE","subLanguage","excludeBegin","excludeEnd","TITLE","TITLE_MODE","PARAMS_RE","PARAMS","returnBegin","concat","aliases","illegal","COMMENT","beginKeywords","endsWithParent","returnEnd"],"sources":["/Applications/MAMP/htdocs/metagen/node_modules/lowlight/node_modules/highlight.js/lib/languages/coffeescript.js"],"sourcesContent":["module.exports = function(hljs) {\n  var KEYWORDS = {\n    keyword:\n      // JS keywords\n      'in if for while finally new do return else break catch instanceof throw try this ' +\n      'switch continue typeof delete debugger super yield import export from as default await ' +\n      // Coffee keywords\n      'then unless until loop of by when and or is isnt not',\n    literal:\n      // JS literals\n      'true false null undefined ' +\n      // Coffee literals\n      'yes no on off',\n    built_in:\n      'npm require console print module global window document'\n  };\n  var JS_IDENT_RE = '[A-Za-z$_][0-9A-Za-z$_]*';\n  var SUBST = {\n    className: 'subst',\n    begin: /#\\{/, end: /}/,\n    keywords: KEYWORDS\n  };\n  var EXPRESSIONS = [\n    hljs.BINARY_NUMBER_MODE,\n    hljs.inherit(hljs.C_NUMBER_MODE, {starts: {end: '(\\\\s*/)?', relevance: 0}}), // a number tries to eat the following slash to prevent treating it as a regexp\n    {\n      className: 'string',\n      variants: [\n        {\n          begin: /'''/, end: /'''/,\n          contains: [hljs.BACKSLASH_ESCAPE]\n        },\n        {\n          begin: /'/, end: /'/,\n          contains: [hljs.BACKSLASH_ESCAPE]\n        },\n        {\n          begin: /\"\"\"/, end: /\"\"\"/,\n          contains: [hljs.BACKSLASH_ESCAPE, SUBST]\n        },\n        {\n          begin: /\"/, end: /\"/,\n          contains: [hljs.BACKSLASH_ESCAPE, SUBST]\n        }\n      ]\n    },\n    {\n      className: 'regexp',\n      variants: [\n        {\n          begin: '///', end: '///',\n          contains: [SUBST, hljs.HASH_COMMENT_MODE]\n        },\n        {\n          begin: '//[gim]*',\n          relevance: 0\n        },\n        {\n          // regex can't start with space to parse x / 2 / 3 as two divisions\n          // regex can't start with *, and it supports an \"illegal\" in the main mode\n          begin: /\\/(?![ *])(\\\\\\/|.)*?\\/[gim]*(?=\\W|$)/\n        }\n      ]\n    },\n    {\n      begin: '@' + JS_IDENT_RE // relevance booster\n    },\n    {\n      subLanguage: 'javascript',\n      excludeBegin: true, excludeEnd: true,\n      variants: [\n        {\n          begin: '```', end: '```',\n        },\n        {\n          begin: '`', end: '`',\n        }\n      ]\n    }\n  ];\n  SUBST.contains = EXPRESSIONS;\n\n  var TITLE = hljs.inherit(hljs.TITLE_MODE, {begin: JS_IDENT_RE});\n  var PARAMS_RE = '(\\\\(.*\\\\))?\\\\s*\\\\B[-=]>';\n  var PARAMS = {\n    className: 'params',\n    begin: '\\\\([^\\\\(]', returnBegin: true,\n    /* We need another contained nameless mode to not have every nested\n    pair of parens to be called \"params\" */\n    contains: [{\n      begin: /\\(/, end: /\\)/,\n      keywords: KEYWORDS,\n      contains: ['self'].concat(EXPRESSIONS)\n    }]\n  };\n\n  return {\n    aliases: ['coffee', 'cson', 'iced'],\n    keywords: KEYWORDS,\n    illegal: /\\/\\*/,\n    contains: EXPRESSIONS.concat([\n      hljs.COMMENT('###', '###'),\n      hljs.HASH_COMMENT_MODE,\n      {\n        className: 'function',\n        begin: '^\\\\s*' + JS_IDENT_RE + '\\\\s*=\\\\s*' + PARAMS_RE, end: '[-=]>',\n        returnBegin: true,\n        contains: [TITLE, PARAMS]\n      },\n      {\n        // anonymous function start\n        begin: /[:\\(,=]\\s*/,\n        relevance: 0,\n        contains: [\n          {\n            className: 'function',\n            begin: PARAMS_RE, end: '[-=]>',\n            returnBegin: true,\n            contains: [PARAMS]\n          }\n        ]\n      },\n      {\n        className: 'class',\n        beginKeywords: 'class',\n        end: '$',\n        illegal: /[:=\"\\[\\]]/,\n        contains: [\n          {\n            beginKeywords: 'extends',\n            endsWithParent: true,\n            illegal: /[:=\"\\[\\]]/,\n            contains: [TITLE]\n          },\n          TITLE\n        ]\n      },\n      {\n        begin: JS_IDENT_RE + ':', end: ':',\n        returnBegin: true, returnEnd: true,\n        relevance: 0\n      }\n    ])\n  };\n};"],"mappings":"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"},"metadata":{},"sourceType":"script"}