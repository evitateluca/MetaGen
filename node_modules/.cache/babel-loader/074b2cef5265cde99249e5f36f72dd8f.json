{"ast":null,"code":"module.exports = function (hljs) {\n  var IDENT_RE = '[a-zA-Z-][a-zA-Z0-9_-]*';\n  var RULE = {\n    begin: /(?:[A-Z\\_\\.\\-]+|--[a-zA-Z0-9_-]+)\\s*:/,\n    returnBegin: true,\n    end: ';',\n    endsWithParent: true,\n    contains: [{\n      className: 'attribute',\n      begin: /\\S/,\n      end: ':',\n      excludeEnd: true,\n      starts: {\n        endsWithParent: true,\n        excludeEnd: true,\n        contains: [{\n          begin: /[\\w-]+\\(/,\n          returnBegin: true,\n          contains: [{\n            className: 'built_in',\n            begin: /[\\w-]+/\n          }, {\n            begin: /\\(/,\n            end: /\\)/,\n            contains: [hljs.APOS_STRING_MODE, hljs.QUOTE_STRING_MODE]\n          }]\n        }, hljs.CSS_NUMBER_MODE, hljs.QUOTE_STRING_MODE, hljs.APOS_STRING_MODE, hljs.C_BLOCK_COMMENT_MODE, {\n          className: 'number',\n          begin: '#[0-9A-Fa-f]+'\n        }, {\n          className: 'meta',\n          begin: '!important'\n        }]\n      }\n    }]\n  };\n  return {\n    case_insensitive: true,\n    illegal: /[=\\/|'\\$]/,\n    contains: [hljs.C_BLOCK_COMMENT_MODE, {\n      className: 'selector-id',\n      begin: /#[A-Za-z0-9_-]+/\n    }, {\n      className: 'selector-class',\n      begin: /\\.[A-Za-z0-9_-]+/\n    }, {\n      className: 'selector-attr',\n      begin: /\\[/,\n      end: /\\]/,\n      illegal: '$'\n    }, {\n      className: 'selector-pseudo',\n      begin: /:(:)?[a-zA-Z0-9\\_\\-\\+\\(\\)\"'.]+/\n    }, {\n      begin: '@(font-face|page)',\n      lexemes: '[a-z-]+',\n      keywords: 'font-face page'\n    }, {\n      begin: '@',\n      end: '[{;]',\n      // at_rule eating first \"{\" is a good thing\n      // because it doesn’t let it to be parsed as\n      // a rule set but instead drops parser into\n      // the default mode which is how it should be.\n      illegal: /:/,\n      // break on Less variables @var: ...\n      contains: [{\n        className: 'keyword',\n        begin: /\\w+/\n      }, {\n        begin: /\\s/,\n        endsWithParent: true,\n        excludeEnd: true,\n        relevance: 0,\n        contains: [hljs.APOS_STRING_MODE, hljs.QUOTE_STRING_MODE, hljs.CSS_NUMBER_MODE]\n      }]\n    }, {\n      className: 'selector-tag',\n      begin: IDENT_RE,\n      relevance: 0\n    }, {\n      begin: '{',\n      end: '}',\n      illegal: /\\S/,\n      contains: [hljs.C_BLOCK_COMMENT_MODE, RULE]\n    }]\n  };\n};","map":{"version":3,"names":["module","exports","hljs","IDENT_RE","RULE","begin","returnBegin","end","endsWithParent","contains","className","excludeEnd","starts","APOS_STRING_MODE","QUOTE_STRING_MODE","CSS_NUMBER_MODE","C_BLOCK_COMMENT_MODE","case_insensitive","illegal","lexemes","keywords","relevance"],"sources":["/Applications/MAMP/htdocs/metagen/node_modules/react-syntax-highlighter/node_modules/highlight.js/lib/languages/css.js"],"sourcesContent":["module.exports = function(hljs) {\n  var IDENT_RE = '[a-zA-Z-][a-zA-Z0-9_-]*';\n  var RULE = {\n    begin: /(?:[A-Z\\_\\.\\-]+|--[a-zA-Z0-9_-]+)\\s*:/, returnBegin: true, end: ';', endsWithParent: true,\n    contains: [\n      {\n        className: 'attribute',\n        begin: /\\S/, end: ':', excludeEnd: true,\n        starts: {\n          endsWithParent: true, excludeEnd: true,\n          contains: [\n            {\n              begin: /[\\w-]+\\(/, returnBegin: true,\n              contains: [\n                {\n                  className: 'built_in',\n                  begin: /[\\w-]+/\n                },\n                {\n                  begin: /\\(/, end: /\\)/,\n                  contains: [\n                    hljs.APOS_STRING_MODE,\n                    hljs.QUOTE_STRING_MODE\n                  ]\n                }\n              ]\n            },\n            hljs.CSS_NUMBER_MODE,\n            hljs.QUOTE_STRING_MODE,\n            hljs.APOS_STRING_MODE,\n            hljs.C_BLOCK_COMMENT_MODE,\n            {\n              className: 'number', begin: '#[0-9A-Fa-f]+'\n            },\n            {\n              className: 'meta', begin: '!important'\n            }\n          ]\n        }\n      }\n    ]\n  };\n\n  return {\n    case_insensitive: true,\n    illegal: /[=\\/|'\\$]/,\n    contains: [\n      hljs.C_BLOCK_COMMENT_MODE,\n      {\n        className: 'selector-id', begin: /#[A-Za-z0-9_-]+/\n      },\n      {\n        className: 'selector-class', begin: /\\.[A-Za-z0-9_-]+/\n      },\n      {\n        className: 'selector-attr',\n        begin: /\\[/, end: /\\]/,\n        illegal: '$'\n      },\n      {\n        className: 'selector-pseudo',\n        begin: /:(:)?[a-zA-Z0-9\\_\\-\\+\\(\\)\"'.]+/\n      },\n      {\n        begin: '@(font-face|page)',\n        lexemes: '[a-z-]+',\n        keywords: 'font-face page'\n      },\n      {\n        begin: '@', end: '[{;]', // at_rule eating first \"{\" is a good thing\n                                 // because it doesn’t let it to be parsed as\n                                 // a rule set but instead drops parser into\n                                 // the default mode which is how it should be.\n        illegal: /:/, // break on Less variables @var: ...\n        contains: [\n          {\n            className: 'keyword',\n            begin: /\\w+/\n          },\n          {\n            begin: /\\s/, endsWithParent: true, excludeEnd: true,\n            relevance: 0,\n            contains: [\n              hljs.APOS_STRING_MODE, hljs.QUOTE_STRING_MODE,\n              hljs.CSS_NUMBER_MODE\n            ]\n          }\n        ]\n      },\n      {\n        className: 'selector-tag', begin: IDENT_RE,\n        relevance: 0\n      },\n      {\n        begin: '{', end: '}',\n        illegal: /\\S/,\n        contains: [\n          hljs.C_BLOCK_COMMENT_MODE,\n          RULE,\n        ]\n      }\n    ]\n  };\n};"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiB,UAASC,IAAT,EAAe;EAC9B,IAAIC,QAAQ,GAAG,yBAAf;EACA,IAAIC,IAAI,GAAG;IACTC,KAAK,EAAE,uCADE;IACuCC,WAAW,EAAE,IADpD;IAC0DC,GAAG,EAAE,GAD/D;IACoEC,cAAc,EAAE,IADpF;IAETC,QAAQ,EAAE,CACR;MACEC,SAAS,EAAE,WADb;MAEEL,KAAK,EAAE,IAFT;MAEeE,GAAG,EAAE,GAFpB;MAEyBI,UAAU,EAAE,IAFrC;MAGEC,MAAM,EAAE;QACNJ,cAAc,EAAE,IADV;QACgBG,UAAU,EAAE,IAD5B;QAENF,QAAQ,EAAE,CACR;UACEJ,KAAK,EAAE,UADT;UACqBC,WAAW,EAAE,IADlC;UAEEG,QAAQ,EAAE,CACR;YACEC,SAAS,EAAE,UADb;YAEEL,KAAK,EAAE;UAFT,CADQ,EAKR;YACEA,KAAK,EAAE,IADT;YACeE,GAAG,EAAE,IADpB;YAEEE,QAAQ,EAAE,CACRP,IAAI,CAACW,gBADG,EAERX,IAAI,CAACY,iBAFG;UAFZ,CALQ;QAFZ,CADQ,EAiBRZ,IAAI,CAACa,eAjBG,EAkBRb,IAAI,CAACY,iBAlBG,EAmBRZ,IAAI,CAACW,gBAnBG,EAoBRX,IAAI,CAACc,oBApBG,EAqBR;UACEN,SAAS,EAAE,QADb;UACuBL,KAAK,EAAE;QAD9B,CArBQ,EAwBR;UACEK,SAAS,EAAE,MADb;UACqBL,KAAK,EAAE;QAD5B,CAxBQ;MAFJ;IAHV,CADQ;EAFD,CAAX;EAyCA,OAAO;IACLY,gBAAgB,EAAE,IADb;IAELC,OAAO,EAAE,WAFJ;IAGLT,QAAQ,EAAE,CACRP,IAAI,CAACc,oBADG,EAER;MACEN,SAAS,EAAE,aADb;MAC4BL,KAAK,EAAE;IADnC,CAFQ,EAKR;MACEK,SAAS,EAAE,gBADb;MAC+BL,KAAK,EAAE;IADtC,CALQ,EAQR;MACEK,SAAS,EAAE,eADb;MAEEL,KAAK,EAAE,IAFT;MAEeE,GAAG,EAAE,IAFpB;MAGEW,OAAO,EAAE;IAHX,CARQ,EAaR;MACER,SAAS,EAAE,iBADb;MAEEL,KAAK,EAAE;IAFT,CAbQ,EAiBR;MACEA,KAAK,EAAE,mBADT;MAEEc,OAAO,EAAE,SAFX;MAGEC,QAAQ,EAAE;IAHZ,CAjBQ,EAsBR;MACEf,KAAK,EAAE,GADT;MACcE,GAAG,EAAE,MADnB;MAC2B;MACA;MACA;MACA;MACzBW,OAAO,EAAE,GALX;MAKgB;MACdT,QAAQ,EAAE,CACR;QACEC,SAAS,EAAE,SADb;QAEEL,KAAK,EAAE;MAFT,CADQ,EAKR;QACEA,KAAK,EAAE,IADT;QACeG,cAAc,EAAE,IAD/B;QACqCG,UAAU,EAAE,IADjD;QAEEU,SAAS,EAAE,CAFb;QAGEZ,QAAQ,EAAE,CACRP,IAAI,CAACW,gBADG,EACeX,IAAI,CAACY,iBADpB,EAERZ,IAAI,CAACa,eAFG;MAHZ,CALQ;IANZ,CAtBQ,EA2CR;MACEL,SAAS,EAAE,cADb;MAC6BL,KAAK,EAAEF,QADpC;MAEEkB,SAAS,EAAE;IAFb,CA3CQ,EA+CR;MACEhB,KAAK,EAAE,GADT;MACcE,GAAG,EAAE,GADnB;MAEEW,OAAO,EAAE,IAFX;MAGET,QAAQ,EAAE,CACRP,IAAI,CAACc,oBADG,EAERZ,IAFQ;IAHZ,CA/CQ;EAHL,CAAP;AA4DD,CAvGD"},"metadata":{},"sourceType":"script"}