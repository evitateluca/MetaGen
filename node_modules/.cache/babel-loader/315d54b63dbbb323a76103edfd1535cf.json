{"ast":null,"code":"module.exports = function (hljs) {\n  return {\n    aliases: ['nim'],\n    keywords: {\n      keyword: 'addr and as asm bind block break case cast const continue converter ' + 'discard distinct div do elif else end enum except export finally ' + 'for from generic if import in include interface is isnot iterator ' + 'let macro method mixin mod nil not notin object of or out proc ptr ' + 'raise ref return shl shr static template try tuple type using var ' + 'when while with without xor yield',\n      literal: 'shared guarded stdin stdout stderr result true false',\n      built_in: 'int int8 int16 int32 int64 uint uint8 uint16 uint32 uint64 float ' + 'float32 float64 bool char string cstring pointer expr stmt void ' + 'auto any range array openarray varargs seq set clong culong cchar ' + 'cschar cshort cint csize clonglong cfloat cdouble clongdouble ' + 'cuchar cushort cuint culonglong cstringarray semistatic'\n    },\n    contains: [{\n      className: 'meta',\n      // Actually pragma\n      begin: /{\\./,\n      end: /\\.}/,\n      relevance: 10\n    }, {\n      className: 'string',\n      begin: /[a-zA-Z]\\w*\"/,\n      end: /\"/,\n      contains: [{\n        begin: /\"\"/\n      }]\n    }, {\n      className: 'string',\n      begin: /([a-zA-Z]\\w*)?\"\"\"/,\n      end: /\"\"\"/\n    }, hljs.QUOTE_STRING_MODE, {\n      className: 'type',\n      begin: /\\b[A-Z]\\w+\\b/,\n      relevance: 0\n    }, {\n      className: 'number',\n      relevance: 0,\n      variants: [{\n        begin: /\\b(0[xX][0-9a-fA-F][_0-9a-fA-F]*)('?[iIuU](8|16|32|64))?/\n      }, {\n        begin: /\\b(0o[0-7][_0-7]*)('?[iIuUfF](8|16|32|64))?/\n      }, {\n        begin: /\\b(0(b|B)[01][_01]*)('?[iIuUfF](8|16|32|64))?/\n      }, {\n        begin: /\\b(\\d[_\\d]*)('?[iIuUfF](8|16|32|64))?/\n      }]\n    }, hljs.HASH_COMMENT_MODE]\n  };\n};","map":{"version":3,"names":["module","exports","hljs","aliases","keywords","keyword","literal","built_in","contains","className","begin","end","relevance","QUOTE_STRING_MODE","variants","HASH_COMMENT_MODE"],"sources":["/Applications/MAMP/htdocs/metagen/node_modules/lowlight/node_modules/highlight.js/lib/languages/nimrod.js"],"sourcesContent":["module.exports = function(hljs) {\n  return {\n    aliases: ['nim'],\n    keywords: {\n      keyword:\n        'addr and as asm bind block break case cast const continue converter ' +\n        'discard distinct div do elif else end enum except export finally ' +\n        'for from generic if import in include interface is isnot iterator ' +\n        'let macro method mixin mod nil not notin object of or out proc ptr ' +\n        'raise ref return shl shr static template try tuple type using var ' +\n        'when while with without xor yield',\n      literal:\n        'shared guarded stdin stdout stderr result true false',\n      built_in:\n        'int int8 int16 int32 int64 uint uint8 uint16 uint32 uint64 float ' +\n        'float32 float64 bool char string cstring pointer expr stmt void ' +\n        'auto any range array openarray varargs seq set clong culong cchar ' +\n        'cschar cshort cint csize clonglong cfloat cdouble clongdouble ' +\n        'cuchar cushort cuint culonglong cstringarray semistatic'\n    },\n    contains: [ {\n        className: 'meta', // Actually pragma\n        begin: /{\\./,\n        end: /\\.}/,\n        relevance: 10\n      }, {\n        className: 'string',\n        begin: /[a-zA-Z]\\w*\"/,\n        end: /\"/,\n        contains: [{begin: /\"\"/}]\n      }, {\n        className: 'string',\n        begin: /([a-zA-Z]\\w*)?\"\"\"/,\n        end: /\"\"\"/\n      },\n      hljs.QUOTE_STRING_MODE,\n      {\n        className: 'type',\n        begin: /\\b[A-Z]\\w+\\b/,\n        relevance: 0\n      }, {\n        className: 'number',\n        relevance: 0,\n        variants: [\n          {begin: /\\b(0[xX][0-9a-fA-F][_0-9a-fA-F]*)('?[iIuU](8|16|32|64))?/},\n          {begin: /\\b(0o[0-7][_0-7]*)('?[iIuUfF](8|16|32|64))?/},\n          {begin: /\\b(0(b|B)[01][_01]*)('?[iIuUfF](8|16|32|64))?/},\n          {begin: /\\b(\\d[_\\d]*)('?[iIuUfF](8|16|32|64))?/}\n        ]\n      },\n      hljs.HASH_COMMENT_MODE\n    ]\n  }\n};"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiB,UAASC,IAAT,EAAe;EAC9B,OAAO;IACLC,OAAO,EAAE,CAAC,KAAD,CADJ;IAELC,QAAQ,EAAE;MACRC,OAAO,EACL,yEACA,mEADA,GAEA,oEAFA,GAGA,qEAHA,GAIA,oEAJA,GAKA,mCAPM;MAQRC,OAAO,EACL,sDATM;MAURC,QAAQ,EACN,sEACA,kEADA,GAEA,oEAFA,GAGA,gEAHA,GAIA;IAfM,CAFL;IAmBLC,QAAQ,EAAE,CAAE;MACRC,SAAS,EAAE,MADH;MACW;MACnBC,KAAK,EAAE,KAFC;MAGRC,GAAG,EAAE,KAHG;MAIRC,SAAS,EAAE;IAJH,CAAF,EAKL;MACDH,SAAS,EAAE,QADV;MAEDC,KAAK,EAAE,cAFN;MAGDC,GAAG,EAAE,GAHJ;MAIDH,QAAQ,EAAE,CAAC;QAACE,KAAK,EAAE;MAAR,CAAD;IAJT,CALK,EAUL;MACDD,SAAS,EAAE,QADV;MAEDC,KAAK,EAAE,mBAFN;MAGDC,GAAG,EAAE;IAHJ,CAVK,EAeRT,IAAI,CAACW,iBAfG,EAgBR;MACEJ,SAAS,EAAE,MADb;MAEEC,KAAK,EAAE,cAFT;MAGEE,SAAS,EAAE;IAHb,CAhBQ,EAoBL;MACDH,SAAS,EAAE,QADV;MAEDG,SAAS,EAAE,CAFV;MAGDE,QAAQ,EAAE,CACR;QAACJ,KAAK,EAAE;MAAR,CADQ,EAER;QAACA,KAAK,EAAE;MAAR,CAFQ,EAGR;QAACA,KAAK,EAAE;MAAR,CAHQ,EAIR;QAACA,KAAK,EAAE;MAAR,CAJQ;IAHT,CApBK,EA8BRR,IAAI,CAACa,iBA9BG;EAnBL,CAAP;AAoDD,CArDD"},"metadata":{},"sourceType":"script"}