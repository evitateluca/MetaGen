{"ast":null,"code":"module.exports = function (hljs) {\n  // whitespaces: space, tab, formfeed\n  var WS0 = '[ \\\\t\\\\f]*';\n  var WS1 = '[ \\\\t\\\\f]+'; // delimiter\n\n  var DELIM = '(' + WS0 + '[:=]' + WS0 + '|' + WS1 + ')';\n  var KEY_ALPHANUM = '([^\\\\\\\\\\\\W:= \\\\t\\\\f\\\\n]|\\\\\\\\.)+';\n  var KEY_OTHER = '([^\\\\\\\\:= \\\\t\\\\f\\\\n]|\\\\\\\\.)+';\n  var DELIM_AND_VALUE = {\n    // skip DELIM\n    end: DELIM,\n    relevance: 0,\n    starts: {\n      // value: everything until end of line (again, taking into account backslashes)\n      className: 'string',\n      end: /$/,\n      relevance: 0,\n      contains: [{\n        begin: '\\\\\\\\\\\\n'\n      }]\n    }\n  };\n  return {\n    case_insensitive: true,\n    illegal: /\\S/,\n    contains: [hljs.COMMENT('^\\\\s*[!#]', '$'), // key: everything until whitespace or = or : (taking into account backslashes)\n    // case of a \"normal\" key\n    {\n      begin: KEY_ALPHANUM + DELIM,\n      returnBegin: true,\n      contains: [{\n        className: 'attr',\n        begin: KEY_ALPHANUM,\n        endsParent: true,\n        relevance: 0\n      }],\n      starts: DELIM_AND_VALUE\n    }, // case of key containing non-alphanumeric chars => relevance = 0\n    {\n      begin: KEY_OTHER + DELIM,\n      returnBegin: true,\n      relevance: 0,\n      contains: [{\n        className: 'meta',\n        begin: KEY_OTHER,\n        endsParent: true,\n        relevance: 0\n      }],\n      starts: DELIM_AND_VALUE\n    }, // case of an empty key\n    {\n      className: 'attr',\n      relevance: 0,\n      begin: KEY_OTHER + WS0 + '$'\n    }]\n  };\n};","map":{"version":3,"names":["module","exports","hljs","WS0","WS1","DELIM","KEY_ALPHANUM","KEY_OTHER","DELIM_AND_VALUE","end","relevance","starts","className","contains","begin","case_insensitive","illegal","COMMENT","returnBegin","endsParent"],"sources":["/Applications/MAMP/htdocs/metagen/node_modules/react-syntax-highlighter/node_modules/highlight.js/lib/languages/properties.js"],"sourcesContent":["module.exports = function(hljs) {\n\n  // whitespaces: space, tab, formfeed\n  var WS0 = '[ \\\\t\\\\f]*';\n  var WS1 = '[ \\\\t\\\\f]+';\n  // delimiter\n  var DELIM = '(' + WS0+'[:=]'+WS0+ '|' + WS1 + ')';\n  var KEY_ALPHANUM = '([^\\\\\\\\\\\\W:= \\\\t\\\\f\\\\n]|\\\\\\\\.)+';\n  var KEY_OTHER = '([^\\\\\\\\:= \\\\t\\\\f\\\\n]|\\\\\\\\.)+';\n\n  var DELIM_AND_VALUE = {\n          // skip DELIM\n          end: DELIM,\n          relevance: 0,\n          starts: {\n            // value: everything until end of line (again, taking into account backslashes)\n            className: 'string',\n            end: /$/,\n            relevance: 0,\n            contains: [\n              { begin: '\\\\\\\\\\\\n' }\n            ]\n          }\n        };\n\n  return {\n    case_insensitive: true,\n    illegal: /\\S/,\n    contains: [\n      hljs.COMMENT('^\\\\s*[!#]', '$'),\n      // key: everything until whitespace or = or : (taking into account backslashes)\n      // case of a \"normal\" key\n      {\n        begin: KEY_ALPHANUM + DELIM,\n        returnBegin: true,\n        contains: [\n          {\n            className: 'attr',\n            begin: KEY_ALPHANUM,\n            endsParent: true,\n            relevance: 0\n          }\n        ],\n        starts: DELIM_AND_VALUE\n      },\n      // case of key containing non-alphanumeric chars => relevance = 0\n      {\n        begin: KEY_OTHER + DELIM,\n        returnBegin: true,\n        relevance: 0,\n        contains: [\n          {\n            className: 'meta',\n            begin: KEY_OTHER,\n            endsParent: true,\n            relevance: 0\n          }\n        ],\n        starts: DELIM_AND_VALUE\n      },\n      // case of an empty key\n      {\n        className: 'attr',\n        relevance: 0,\n        begin: KEY_OTHER + WS0 + '$'\n      }\n    ]\n  };\n};"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiB,UAASC,IAAT,EAAe;EAE9B;EACA,IAAIC,GAAG,GAAG,YAAV;EACA,IAAIC,GAAG,GAAG,YAAV,CAJ8B,CAK9B;;EACA,IAAIC,KAAK,GAAG,MAAMF,GAAN,GAAU,MAAV,GAAiBA,GAAjB,GAAsB,GAAtB,GAA4BC,GAA5B,GAAkC,GAA9C;EACA,IAAIE,YAAY,GAAG,iCAAnB;EACA,IAAIC,SAAS,GAAG,8BAAhB;EAEA,IAAIC,eAAe,GAAG;IACd;IACAC,GAAG,EAAEJ,KAFS;IAGdK,SAAS,EAAE,CAHG;IAIdC,MAAM,EAAE;MACN;MACAC,SAAS,EAAE,QAFL;MAGNH,GAAG,EAAE,GAHC;MAINC,SAAS,EAAE,CAJL;MAKNG,QAAQ,EAAE,CACR;QAAEC,KAAK,EAAE;MAAT,CADQ;IALJ;EAJM,CAAtB;EAeA,OAAO;IACLC,gBAAgB,EAAE,IADb;IAELC,OAAO,EAAE,IAFJ;IAGLH,QAAQ,EAAE,CACRX,IAAI,CAACe,OAAL,CAAa,WAAb,EAA0B,GAA1B,CADQ,EAER;IACA;IACA;MACEH,KAAK,EAAER,YAAY,GAAGD,KADxB;MAEEa,WAAW,EAAE,IAFf;MAGEL,QAAQ,EAAE,CACR;QACED,SAAS,EAAE,MADb;QAEEE,KAAK,EAAER,YAFT;QAGEa,UAAU,EAAE,IAHd;QAIET,SAAS,EAAE;MAJb,CADQ,CAHZ;MAWEC,MAAM,EAAEH;IAXV,CAJQ,EAiBR;IACA;MACEM,KAAK,EAAEP,SAAS,GAAGF,KADrB;MAEEa,WAAW,EAAE,IAFf;MAGER,SAAS,EAAE,CAHb;MAIEG,QAAQ,EAAE,CACR;QACED,SAAS,EAAE,MADb;QAEEE,KAAK,EAAEP,SAFT;QAGEY,UAAU,EAAE,IAHd;QAIET,SAAS,EAAE;MAJb,CADQ,CAJZ;MAYEC,MAAM,EAAEH;IAZV,CAlBQ,EAgCR;IACA;MACEI,SAAS,EAAE,MADb;MAEEF,SAAS,EAAE,CAFb;MAGEI,KAAK,EAAEP,SAAS,GAAGJ,GAAZ,GAAkB;IAH3B,CAjCQ;EAHL,CAAP;AA2CD,CApED"},"metadata":{},"sourceType":"script"}