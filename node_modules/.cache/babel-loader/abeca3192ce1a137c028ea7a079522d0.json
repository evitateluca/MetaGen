{"ast":null,"code":"module.exports = function (hljs) {\n  var LISP_IDENT_RE = '[a-zA-Z_\\\\-\\\\+\\\\*\\\\/\\\\<\\\\=\\\\>\\\\&\\\\#][a-zA-Z0-9_\\\\-\\\\+\\\\*\\\\/\\\\<\\\\=\\\\>\\\\&\\\\#!]*';\n  var MEC_RE = '\\\\|[^]*?\\\\|';\n  var LISP_SIMPLE_NUMBER_RE = '(\\\\-|\\\\+)?\\\\d+(\\\\.\\\\d+|\\\\/\\\\d+)?((d|e|f|l|s|D|E|F|L|S)(\\\\+|\\\\-)?\\\\d+)?';\n  var SHEBANG = {\n    className: 'meta',\n    begin: '^#!',\n    end: '$'\n  };\n  var LITERAL = {\n    className: 'literal',\n    begin: '\\\\b(t{1}|nil)\\\\b'\n  };\n  var NUMBER = {\n    className: 'number',\n    variants: [{\n      begin: LISP_SIMPLE_NUMBER_RE,\n      relevance: 0\n    }, {\n      begin: '#(b|B)[0-1]+(/[0-1]+)?'\n    }, {\n      begin: '#(o|O)[0-7]+(/[0-7]+)?'\n    }, {\n      begin: '#(x|X)[0-9a-fA-F]+(/[0-9a-fA-F]+)?'\n    }, {\n      begin: '#(c|C)\\\\(' + LISP_SIMPLE_NUMBER_RE + ' +' + LISP_SIMPLE_NUMBER_RE,\n      end: '\\\\)'\n    }]\n  };\n  var STRING = hljs.inherit(hljs.QUOTE_STRING_MODE, {\n    illegal: null\n  });\n  var COMMENT = hljs.COMMENT(';', '$', {\n    relevance: 0\n  });\n  var VARIABLE = {\n    begin: '\\\\*',\n    end: '\\\\*'\n  };\n  var KEYWORD = {\n    className: 'symbol',\n    begin: '[:&]' + LISP_IDENT_RE\n  };\n  var IDENT = {\n    begin: LISP_IDENT_RE,\n    relevance: 0\n  };\n  var MEC = {\n    begin: MEC_RE\n  };\n  var QUOTED_LIST = {\n    begin: '\\\\(',\n    end: '\\\\)',\n    contains: ['self', LITERAL, STRING, NUMBER, IDENT]\n  };\n  var QUOTED = {\n    contains: [NUMBER, STRING, VARIABLE, KEYWORD, QUOTED_LIST, IDENT],\n    variants: [{\n      begin: '[\\'`]\\\\(',\n      end: '\\\\)'\n    }, {\n      begin: '\\\\(quote ',\n      end: '\\\\)',\n      keywords: {\n        name: 'quote'\n      }\n    }, {\n      begin: '\\'' + MEC_RE\n    }]\n  };\n  var QUOTED_ATOM = {\n    variants: [{\n      begin: '\\'' + LISP_IDENT_RE\n    }, {\n      begin: '#\\'' + LISP_IDENT_RE + '(::' + LISP_IDENT_RE + ')*'\n    }]\n  };\n  var LIST = {\n    begin: '\\\\(\\\\s*',\n    end: '\\\\)'\n  };\n  var BODY = {\n    endsWithParent: true,\n    relevance: 0\n  };\n  LIST.contains = [{\n    className: 'name',\n    variants: [{\n      begin: LISP_IDENT_RE\n    }, {\n      begin: MEC_RE\n    }]\n  }, BODY];\n  BODY.contains = [QUOTED, QUOTED_ATOM, LIST, LITERAL, NUMBER, STRING, COMMENT, VARIABLE, KEYWORD, MEC, IDENT];\n  return {\n    illegal: /\\S/,\n    contains: [NUMBER, SHEBANG, LITERAL, STRING, COMMENT, QUOTED, QUOTED_ATOM, LIST, IDENT]\n  };\n};","map":{"version":3,"names":["module","exports","hljs","LISP_IDENT_RE","MEC_RE","LISP_SIMPLE_NUMBER_RE","SHEBANG","className","begin","end","LITERAL","NUMBER","variants","relevance","STRING","inherit","QUOTE_STRING_MODE","illegal","COMMENT","VARIABLE","KEYWORD","IDENT","MEC","QUOTED_LIST","contains","QUOTED","keywords","name","QUOTED_ATOM","LIST","BODY","endsWithParent"],"sources":["/Applications/MAMP/htdocs/metagen/node_modules/react-syntax-highlighter/node_modules/highlight.js/lib/languages/lisp.js"],"sourcesContent":["module.exports = function(hljs) {\n  var LISP_IDENT_RE = '[a-zA-Z_\\\\-\\\\+\\\\*\\\\/\\\\<\\\\=\\\\>\\\\&\\\\#][a-zA-Z0-9_\\\\-\\\\+\\\\*\\\\/\\\\<\\\\=\\\\>\\\\&\\\\#!]*';\n  var MEC_RE = '\\\\|[^]*?\\\\|';\n  var LISP_SIMPLE_NUMBER_RE = '(\\\\-|\\\\+)?\\\\d+(\\\\.\\\\d+|\\\\/\\\\d+)?((d|e|f|l|s|D|E|F|L|S)(\\\\+|\\\\-)?\\\\d+)?';\n  var SHEBANG = {\n    className: 'meta',\n    begin: '^#!', end: '$'\n  };\n  var LITERAL = {\n    className: 'literal',\n    begin: '\\\\b(t{1}|nil)\\\\b'\n  };\n  var NUMBER = {\n    className: 'number',\n    variants: [\n      {begin: LISP_SIMPLE_NUMBER_RE, relevance: 0},\n      {begin: '#(b|B)[0-1]+(/[0-1]+)?'},\n      {begin: '#(o|O)[0-7]+(/[0-7]+)?'},\n      {begin: '#(x|X)[0-9a-fA-F]+(/[0-9a-fA-F]+)?'},\n      {begin: '#(c|C)\\\\(' + LISP_SIMPLE_NUMBER_RE + ' +' + LISP_SIMPLE_NUMBER_RE, end: '\\\\)'}\n    ]\n  };\n  var STRING = hljs.inherit(hljs.QUOTE_STRING_MODE, {illegal: null});\n  var COMMENT = hljs.COMMENT(\n    ';', '$',\n    {\n      relevance: 0\n    }\n  );\n  var VARIABLE = {\n    begin: '\\\\*', end: '\\\\*'\n  };\n  var KEYWORD = {\n    className: 'symbol',\n    begin: '[:&]' + LISP_IDENT_RE\n  };\n  var IDENT = {\n    begin: LISP_IDENT_RE,\n    relevance: 0\n  };\n  var MEC = {\n    begin: MEC_RE\n  };\n  var QUOTED_LIST = {\n    begin: '\\\\(', end: '\\\\)',\n    contains: ['self', LITERAL, STRING, NUMBER, IDENT]\n  };\n  var QUOTED = {\n    contains: [NUMBER, STRING, VARIABLE, KEYWORD, QUOTED_LIST, IDENT],\n    variants: [\n      {\n        begin: '[\\'`]\\\\(', end: '\\\\)'\n      },\n      {\n        begin: '\\\\(quote ', end: '\\\\)',\n        keywords: {name: 'quote'}\n      },\n      {\n        begin: '\\'' + MEC_RE\n      }\n    ]\n  };\n  var QUOTED_ATOM = {\n    variants: [\n      {begin: '\\'' + LISP_IDENT_RE},\n      {begin: '#\\'' + LISP_IDENT_RE + '(::' + LISP_IDENT_RE + ')*'}\n    ]\n  };\n  var LIST = {\n    begin: '\\\\(\\\\s*', end: '\\\\)'\n  };\n  var BODY = {\n    endsWithParent: true,\n    relevance: 0\n  };\n  LIST.contains = [\n    {\n      className: 'name',\n      variants: [\n        {begin: LISP_IDENT_RE},\n        {begin: MEC_RE}\n      ]\n    },\n    BODY\n  ];\n  BODY.contains = [QUOTED, QUOTED_ATOM, LIST, LITERAL, NUMBER, STRING, COMMENT, VARIABLE, KEYWORD, MEC, IDENT];\n\n  return {\n    illegal: /\\S/,\n    contains: [\n      NUMBER,\n      SHEBANG,\n      LITERAL,\n      STRING,\n      COMMENT,\n      QUOTED,\n      QUOTED_ATOM,\n      LIST,\n      IDENT\n    ]\n  };\n};"],"mappings":"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"},"metadata":{},"sourceType":"script"}